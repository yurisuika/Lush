package com.yurisuika.lush;

import com.yurisuika.lush.block.*;
import com.yurisuika.lush.item.ModItemGroup;
import com.yurisuika.lush.mixin.SignTypeAccessor;
import com.yurisuika.lush.util.ModBoatType;
import com.yurisuika.lush.registry.ModRegistry;
import com.yurisuika.lush.world.features.tree.*;
import net.fabricmc.api.ModInitializer;
import net.fabricmc.fabric.api.object.builder.v1.block.FabricBlockSettings;
import net.minecraft.block.*;
import net.minecraft.item.*;
import net.minecraft.util.Identifier;
import net.minecraft.util.SignType;
import net.minecraft.util.registry.Registry;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

public class Lush implements ModInitializer {

	public static final String MOD_ID = "lush";

	public static final Logger LOGGER = LogManager.getLogger("lush");

	public static final Block ALDER_LOG = new PillarBlock(FabricBlockSettings.copy(Blocks.OAK_LOG));
	public static final Block ALDER_WOOD = new PillarBlock(FabricBlockSettings.copy(Blocks.OAK_WOOD));
	public static final Block STRIPPED_ALDER_LOG = new PillarBlock(FabricBlockSettings.copy(Blocks.STRIPPED_OAK_LOG));
	public static final Block STRIPPED_ALDER_WOOD = new PillarBlock(FabricBlockSettings.copy(Blocks.STRIPPED_OAK_WOOD));
	public static final Block ALDER_LEAVES =  new LushLeavesBlock(FabricBlockSettings.copy(Blocks.OAK_LEAVES));
	public static final Block ALDER_SAPLING = new SaplingBlock(new AlderSaplingGenerator(), FabricBlockSettings.copy(Blocks.OAK_SAPLING));
	public static final Block POTTED_ALDER_SAPLING = new FlowerPotBlock(ALDER_SAPLING, FabricBlockSettings.copy(Blocks.POTTED_OAK_SAPLING));
	public static final Block ALDER_PLANKS = new Block(FabricBlockSettings.copy(Blocks.OAK_PLANKS));
	public static final Block ALDER_SLAB = new SlabBlock(FabricBlockSettings.copy(Blocks.OAK_SLAB));
	public static final Block ALDER_STAIRS = new StairsBlock(ALDER_PLANKS.getDefaultState(), FabricBlockSettings.copy(Blocks.OAK_STAIRS));
	public static final Block ALDER_FENCE = new FenceBlock(FabricBlockSettings.copy(Blocks.OAK_FENCE));
	public static final Block ALDER_FENCE_GATE = new FenceGateBlock(FabricBlockSettings.copy(Blocks.OAK_FENCE_GATE));
	public static final Block ALDER_BUTTON = new WoodenButtonBlock(FabricBlockSettings.copy(Blocks.OAK_BUTTON));
	public static final Block ALDER_PRESSURE_PLATE = new PressurePlateBlock(PressurePlateBlock.ActivationRule.EVERYTHING, FabricBlockSettings.copy(Blocks.OAK_PRESSURE_PLATE));
	public static final Block ALDER_DOOR = new DoorBlock(FabricBlockSettings.copy(Blocks.OAK_DOOR));
	public static final Block ALDER_TRAPDOOR = new TrapdoorBlock(FabricBlockSettings.copy(Blocks.OAK_TRAPDOOR));
	public static final SignType ALDER_SIGN_TYPE = SignTypeAccessor.registerNew(SignTypeAccessor.newSignType("alder"));
	public static final Block ALDER_SIGN = new ModSignBlock(FabricBlockSettings.copy(Blocks.OAK_SIGN), ALDER_SIGN_TYPE);
	public static final Block ALDER_WALL_SIGN = new ModWallSignBlock(FabricBlockSettings.copy(Blocks.OAK_WALL_SIGN).dropsLike(ALDER_SIGN), ALDER_SIGN_TYPE);
	public static final Item ALDER_BOAT = new BoatItem(ModBoatType.ALDER, new Item.Settings().maxCount(1).group(ModItemGroup.BIRCH));

	public static final Block APPLE_LOG = new PillarBlock(FabricBlockSettings.copy(Blocks.OAK_LOG));
	public static final Block APPLE_WOOD = new PillarBlock(FabricBlockSettings.copy(Blocks.OAK_WOOD));
	public static final Block STRIPPED_APPLE_LOG = new PillarBlock(FabricBlockSettings.copy(Blocks.STRIPPED_OAK_LOG));
	public static final Block STRIPPED_APPLE_WOOD = new PillarBlock(FabricBlockSettings.copy(Blocks.STRIPPED_OAK_WOOD));
	public static final Block APPLE_LEAVES =  new LushLeavesBlock(FabricBlockSettings.copy(Blocks.OAK_LEAVES));
	public static final Block APPLE_SAPLING = new SaplingBlock(new AppleSaplingGenerator(), FabricBlockSettings.copy(Blocks.OAK_SAPLING));
	public static final Block POTTED_APPLE_SAPLING = new FlowerPotBlock(APPLE_SAPLING, FabricBlockSettings.copy(Blocks.POTTED_OAK_SAPLING));
	public static final Block APPLE_PLANKS = new Block(FabricBlockSettings.copy(Blocks.OAK_PLANKS));
	public static final Block APPLE_SLAB = new SlabBlock(FabricBlockSettings.copy(Blocks.OAK_SLAB));
	public static final Block APPLE_STAIRS = new StairsBlock(APPLE_PLANKS.getDefaultState(), FabricBlockSettings.copy(Blocks.OAK_STAIRS));
	public static final Block APPLE_FENCE = new FenceBlock(FabricBlockSettings.copy(Blocks.OAK_FENCE));
	public static final Block APPLE_FENCE_GATE = new FenceGateBlock(FabricBlockSettings.copy(Blocks.OAK_FENCE_GATE));
	public static final Block APPLE_BUTTON = new WoodenButtonBlock(FabricBlockSettings.copy(Blocks.OAK_BUTTON));
	public static final Block APPLE_PRESSURE_PLATE = new PressurePlateBlock(PressurePlateBlock.ActivationRule.EVERYTHING, FabricBlockSettings.copy(Blocks.OAK_PRESSURE_PLATE));
	public static final Block APPLE_DOOR = new DoorBlock(FabricBlockSettings.copy(Blocks.OAK_DOOR));
	public static final Block APPLE_TRAPDOOR = new TrapdoorBlock(FabricBlockSettings.copy(Blocks.OAK_TRAPDOOR));
	public static final SignType APPLE_SIGN_TYPE = SignTypeAccessor.registerNew(SignTypeAccessor.newSignType("apple"));
	public static final Block APPLE_SIGN = new ModSignBlock(FabricBlockSettings.copy(Blocks.OAK_SIGN), APPLE_SIGN_TYPE);
	public static final Block APPLE_WALL_SIGN = new ModWallSignBlock(FabricBlockSettings.copy(Blocks.OAK_WALL_SIGN).dropsLike(APPLE_SIGN), APPLE_SIGN_TYPE);
	public static final Item APPLE_BOAT = new BoatItem(ModBoatType.APPLE, new Item.Settings().maxCount(1).group(ModItemGroup.OAK));

	public static final Block ASH_LOG = new PillarBlock(FabricBlockSettings.copy(Blocks.OAK_LOG));
	public static final Block ASH_WOOD = new PillarBlock(FabricBlockSettings.copy(Blocks.OAK_WOOD));
	public static final Block STRIPPED_ASH_LOG = new PillarBlock(FabricBlockSettings.copy(Blocks.STRIPPED_OAK_LOG));
	public static final Block STRIPPED_ASH_WOOD = new PillarBlock(FabricBlockSettings.copy(Blocks.STRIPPED_OAK_WOOD));
	public static final Block ASH_LEAVES =  new LushLeavesBlock(FabricBlockSettings.copy(Blocks.OAK_LEAVES));
	public static final Block ASH_SAPLING = new SaplingBlock(new AshSaplingGenerator(), FabricBlockSettings.copy(Blocks.OAK_SAPLING));
	public static final Block POTTED_ASH_SAPLING = new FlowerPotBlock(ASH_SAPLING, FabricBlockSettings.copy(Blocks.POTTED_OAK_SAPLING));
	public static final Block ASH_PLANKS = new Block(FabricBlockSettings.copy(Blocks.OAK_PLANKS));
	public static final Block ASH_SLAB = new SlabBlock(FabricBlockSettings.copy(Blocks.OAK_SLAB));
	public static final Block ASH_STAIRS = new StairsBlock(ASH_PLANKS.getDefaultState(), FabricBlockSettings.copy(Blocks.OAK_STAIRS));
	public static final Block ASH_FENCE = new FenceBlock(FabricBlockSettings.copy(Blocks.OAK_FENCE));
	public static final Block ASH_FENCE_GATE = new FenceGateBlock(FabricBlockSettings.copy(Blocks.OAK_FENCE_GATE));
	public static final Block ASH_BUTTON = new WoodenButtonBlock(FabricBlockSettings.copy(Blocks.OAK_BUTTON));
	public static final Block ASH_PRESSURE_PLATE = new PressurePlateBlock(PressurePlateBlock.ActivationRule.EVERYTHING, FabricBlockSettings.copy(Blocks.OAK_PRESSURE_PLATE));
	public static final Block ASH_DOOR = new DoorBlock(FabricBlockSettings.copy(Blocks.OAK_DOOR));
	public static final Block ASH_TRAPDOOR = new TrapdoorBlock(FabricBlockSettings.copy(Blocks.OAK_TRAPDOOR));
	public static final SignType ASH_SIGN_TYPE = SignTypeAccessor.registerNew(SignTypeAccessor.newSignType("ash"));
	public static final Block ASH_SIGN = new ModSignBlock(FabricBlockSettings.copy(Blocks.OAK_SIGN), ASH_SIGN_TYPE);
	public static final Block ASH_WALL_SIGN = new ModWallSignBlock(FabricBlockSettings.copy(Blocks.OAK_WALL_SIGN).dropsLike(ASH_SIGN), ASH_SIGN_TYPE);
	public static final Item ASH_BOAT = new BoatItem(ModBoatType.ASH, new Item.Settings().maxCount(1).group(ModItemGroup.DARK_OAK));

	public static final Block ASPEN_LOG = new PillarBlock(FabricBlockSettings.copy(Blocks.OAK_LOG));
	public static final Block ASPEN_WOOD = new PillarBlock(FabricBlockSettings.copy(Blocks.OAK_WOOD));
	public static final Block STRIPPED_ASPEN_LOG = new PillarBlock(FabricBlockSettings.copy(Blocks.STRIPPED_OAK_LOG));
	public static final Block STRIPPED_ASPEN_WOOD = new PillarBlock(FabricBlockSettings.copy(Blocks.STRIPPED_OAK_WOOD));
	public static final Block ASPEN_LEAVES =  new LushLeavesBlock(FabricBlockSettings.copy(Blocks.OAK_LEAVES));
	public static final Block ASPEN_SAPLING = new SaplingBlock(new AspenSaplingGenerator(), FabricBlockSettings.copy(Blocks.OAK_SAPLING));
	public static final Block POTTED_ASPEN_SAPLING = new FlowerPotBlock(ASPEN_SAPLING, FabricBlockSettings.copy(Blocks.POTTED_OAK_SAPLING));
	public static final Block ASPEN_PLANKS = new Block(FabricBlockSettings.copy(Blocks.OAK_PLANKS));
	public static final Block ASPEN_SLAB = new SlabBlock(FabricBlockSettings.copy(Blocks.OAK_SLAB));
	public static final Block ASPEN_STAIRS = new StairsBlock(ASPEN_PLANKS.getDefaultState(), FabricBlockSettings.copy(Blocks.OAK_STAIRS));
	public static final Block ASPEN_FENCE = new FenceBlock(FabricBlockSettings.copy(Blocks.OAK_FENCE));
	public static final Block ASPEN_FENCE_GATE = new FenceGateBlock(FabricBlockSettings.copy(Blocks.OAK_FENCE_GATE));
	public static final Block ASPEN_BUTTON = new WoodenButtonBlock(FabricBlockSettings.copy(Blocks.OAK_BUTTON));
	public static final Block ASPEN_PRESSURE_PLATE = new PressurePlateBlock(PressurePlateBlock.ActivationRule.EVERYTHING, FabricBlockSettings.copy(Blocks.OAK_PRESSURE_PLATE));
	public static final Block ASPEN_DOOR = new DoorBlock(FabricBlockSettings.copy(Blocks.OAK_DOOR));
	public static final Block ASPEN_TRAPDOOR = new TrapdoorBlock(FabricBlockSettings.copy(Blocks.OAK_TRAPDOOR));
	public static final SignType ASPEN_SIGN_TYPE = SignTypeAccessor.registerNew(SignTypeAccessor.newSignType("aspen"));
	public static final Block ASPEN_SIGN = new ModSignBlock(FabricBlockSettings.copy(Blocks.OAK_SIGN), ASPEN_SIGN_TYPE);
	public static final Block ASPEN_WALL_SIGN = new ModWallSignBlock(FabricBlockSettings.copy(Blocks.OAK_WALL_SIGN).dropsLike(ASPEN_SIGN), ASPEN_SIGN_TYPE);
	public static final Item ASPEN_BOAT = new BoatItem(ModBoatType.ASPEN, new Item.Settings().maxCount(1).group(ModItemGroup.SPRUCE));

	public static final Block CEDAR_LOG = new PillarBlock(FabricBlockSettings.copy(Blocks.OAK_LOG));
	public static final Block CEDAR_WOOD = new PillarBlock(FabricBlockSettings.copy(Blocks.OAK_WOOD));
	public static final Block STRIPPED_CEDAR_LOG = new PillarBlock(FabricBlockSettings.copy(Blocks.STRIPPED_OAK_LOG));
	public static final Block STRIPPED_CEDAR_WOOD = new PillarBlock(FabricBlockSettings.copy(Blocks.STRIPPED_OAK_WOOD));
	public static final Block CEDAR_LEAVES =  new LushLeavesBlock(FabricBlockSettings.copy(Blocks.OAK_LEAVES));
	public static final Block CEDAR_SAPLING = new SaplingBlock(new CedarSaplingGenerator(), FabricBlockSettings.copy(Blocks.OAK_SAPLING));
	public static final Block POTTED_CEDAR_SAPLING = new FlowerPotBlock(CEDAR_SAPLING, FabricBlockSettings.copy(Blocks.POTTED_OAK_SAPLING));
	public static final Block CEDAR_PLANKS = new Block(FabricBlockSettings.copy(Blocks.OAK_PLANKS));
	public static final Block CEDAR_SLAB = new SlabBlock(FabricBlockSettings.copy(Blocks.OAK_SLAB));
	public static final Block CEDAR_STAIRS = new StairsBlock(CEDAR_PLANKS.getDefaultState(), FabricBlockSettings.copy(Blocks.OAK_STAIRS));
	public static final Block CEDAR_FENCE = new FenceBlock(FabricBlockSettings.copy(Blocks.OAK_FENCE));
	public static final Block CEDAR_FENCE_GATE = new FenceGateBlock(FabricBlockSettings.copy(Blocks.OAK_FENCE_GATE));
	public static final Block CEDAR_BUTTON = new WoodenButtonBlock(FabricBlockSettings.copy(Blocks.OAK_BUTTON));
	public static final Block CEDAR_PRESSURE_PLATE = new PressurePlateBlock(PressurePlateBlock.ActivationRule.EVERYTHING, FabricBlockSettings.copy(Blocks.OAK_PRESSURE_PLATE));
	public static final Block CEDAR_DOOR = new DoorBlock(FabricBlockSettings.copy(Blocks.OAK_DOOR));
	public static final Block CEDAR_TRAPDOOR = new TrapdoorBlock(FabricBlockSettings.copy(Blocks.OAK_TRAPDOOR));
	public static final SignType CEDAR_SIGN_TYPE = SignTypeAccessor.registerNew(SignTypeAccessor.newSignType("cedar"));
	public static final Block CEDAR_SIGN = new ModSignBlock(FabricBlockSettings.copy(Blocks.OAK_SIGN), CEDAR_SIGN_TYPE);
	public static final Block CEDAR_WALL_SIGN = new ModWallSignBlock(FabricBlockSettings.copy(Blocks.OAK_WALL_SIGN).dropsLike(CEDAR_SIGN), CEDAR_SIGN_TYPE);
	public static final Item CEDAR_BOAT = new BoatItem(ModBoatType.CEDAR, new Item.Settings().maxCount(1).group(ModItemGroup.DARK_OAK));

	public static final Block CHERRY_LOG = new PillarBlock(FabricBlockSettings.copy(Blocks.OAK_LOG));
	public static final Block CHERRY_WOOD = new PillarBlock(FabricBlockSettings.copy(Blocks.OAK_WOOD));
	public static final Block STRIPPED_CHERRY_LOG = new PillarBlock(FabricBlockSettings.copy(Blocks.STRIPPED_OAK_LOG));
	public static final Block STRIPPED_CHERRY_WOOD = new PillarBlock(FabricBlockSettings.copy(Blocks.STRIPPED_OAK_WOOD));
	public static final Block CHERRY_LEAVES =  new LushLeavesBlock(FabricBlockSettings.copy(Blocks.OAK_LEAVES));
	public static final Block CHERRY_SAPLING = new SaplingBlock(new CherrySaplingGenerator(), FabricBlockSettings.copy(Blocks.OAK_SAPLING));
	public static final Block POTTED_CHERRY_SAPLING = new FlowerPotBlock(CHERRY_SAPLING, FabricBlockSettings.copy(Blocks.POTTED_OAK_SAPLING));
	public static final Block CHERRY_PLANKS = new Block(FabricBlockSettings.copy(Blocks.OAK_PLANKS));
	public static final Block CHERRY_SLAB = new SlabBlock(FabricBlockSettings.copy(Blocks.OAK_SLAB));
	public static final Block CHERRY_STAIRS = new StairsBlock(CHERRY_PLANKS.getDefaultState(), FabricBlockSettings.copy(Blocks.OAK_STAIRS));
	public static final Block CHERRY_FENCE = new FenceBlock(FabricBlockSettings.copy(Blocks.OAK_FENCE));
	public static final Block CHERRY_FENCE_GATE = new FenceGateBlock(FabricBlockSettings.copy(Blocks.OAK_FENCE_GATE));
	public static final Block CHERRY_BUTTON = new WoodenButtonBlock(FabricBlockSettings.copy(Blocks.OAK_BUTTON));
	public static final Block CHERRY_PRESSURE_PLATE = new PressurePlateBlock(PressurePlateBlock.ActivationRule.EVERYTHING, FabricBlockSettings.copy(Blocks.OAK_PRESSURE_PLATE));
	public static final Block CHERRY_DOOR = new DoorBlock(FabricBlockSettings.copy(Blocks.OAK_DOOR));
	public static final Block CHERRY_TRAPDOOR = new TrapdoorBlock(FabricBlockSettings.copy(Blocks.OAK_TRAPDOOR));
	public static final SignType CHERRY_SIGN_TYPE = SignTypeAccessor.registerNew(SignTypeAccessor.newSignType("cherry"));
	public static final Block CHERRY_SIGN = new ModSignBlock(FabricBlockSettings.copy(Blocks.OAK_SIGN), CHERRY_SIGN_TYPE);
	public static final Block CHERRY_WALL_SIGN = new ModWallSignBlock(FabricBlockSettings.copy(Blocks.OAK_WALL_SIGN).dropsLike(CHERRY_SIGN), CHERRY_SIGN_TYPE);
	public static final Item CHERRY_BOAT = new BoatItem(ModBoatType.CHERRY, new Item.Settings().maxCount(1).group(ModItemGroup.BIRCH));

	public static final Block CHESTNUT_LOG = new PillarBlock(FabricBlockSettings.copy(Blocks.OAK_LOG));
	public static final Block CHESTNUT_WOOD = new PillarBlock(FabricBlockSettings.copy(Blocks.OAK_WOOD));
	public static final Block STRIPPED_CHESTNUT_LOG = new PillarBlock(FabricBlockSettings.copy(Blocks.STRIPPED_OAK_LOG));
	public static final Block STRIPPED_CHESTNUT_WOOD = new PillarBlock(FabricBlockSettings.copy(Blocks.STRIPPED_OAK_WOOD));
	public static final Block CHESTNUT_LEAVES =  new LushLeavesBlock(FabricBlockSettings.copy(Blocks.OAK_LEAVES));
	public static final Block CHESTNUT_SAPLING = new SaplingBlock(new ChestnutSaplingGenerator(), FabricBlockSettings.copy(Blocks.OAK_SAPLING));
	public static final Block POTTED_CHESTNUT_SAPLING = new FlowerPotBlock(CHESTNUT_SAPLING, FabricBlockSettings.copy(Blocks.POTTED_OAK_SAPLING));
	public static final Block CHESTNUT_PLANKS = new Block(FabricBlockSettings.copy(Blocks.OAK_PLANKS));
	public static final Block CHESTNUT_SLAB = new SlabBlock(FabricBlockSettings.copy(Blocks.OAK_SLAB));
	public static final Block CHESTNUT_STAIRS = new StairsBlock(CHESTNUT_PLANKS.getDefaultState(), FabricBlockSettings.copy(Blocks.OAK_STAIRS));
	public static final Block CHESTNUT_FENCE = new FenceBlock(FabricBlockSettings.copy(Blocks.OAK_FENCE));
	public static final Block CHESTNUT_FENCE_GATE = new FenceGateBlock(FabricBlockSettings.copy(Blocks.OAK_FENCE_GATE));
	public static final Block CHESTNUT_BUTTON = new WoodenButtonBlock(FabricBlockSettings.copy(Blocks.OAK_BUTTON));
	public static final Block CHESTNUT_PRESSURE_PLATE = new PressurePlateBlock(PressurePlateBlock.ActivationRule.EVERYTHING, FabricBlockSettings.copy(Blocks.OAK_PRESSURE_PLATE));
	public static final Block CHESTNUT_DOOR = new DoorBlock(FabricBlockSettings.copy(Blocks.OAK_DOOR));
	public static final Block CHESTNUT_TRAPDOOR = new TrapdoorBlock(FabricBlockSettings.copy(Blocks.OAK_TRAPDOOR));
	public static final SignType CHESTNUT_SIGN_TYPE = SignTypeAccessor.registerNew(SignTypeAccessor.newSignType("chestnut"));
	public static final Block CHESTNUT_SIGN = new ModSignBlock(FabricBlockSettings.copy(Blocks.OAK_SIGN), CHESTNUT_SIGN_TYPE);
	public static final Block CHESTNUT_WALL_SIGN = new ModWallSignBlock(FabricBlockSettings.copy(Blocks.OAK_WALL_SIGN).dropsLike(CHESTNUT_SIGN), CHESTNUT_SIGN_TYPE);
	public static final Item CHESTNUT_BOAT = new BoatItem(ModBoatType.CHESTNUT, new Item.Settings().maxCount(1).group(ModItemGroup.OAK));

	public static final Block CITRUS_LOG = new PillarBlock(FabricBlockSettings.copy(Blocks.OAK_LOG));
	public static final Block CITRUS_WOOD = new PillarBlock(FabricBlockSettings.copy(Blocks.OAK_WOOD));
	public static final Block STRIPPED_CITRUS_LOG = new PillarBlock(FabricBlockSettings.copy(Blocks.STRIPPED_OAK_LOG));
	public static final Block STRIPPED_CITRUS_WOOD = new PillarBlock(FabricBlockSettings.copy(Blocks.STRIPPED_OAK_WOOD));
	public static final Block CITRUS_LEAVES =  new LushLeavesBlock(FabricBlockSettings.copy(Blocks.OAK_LEAVES));
	public static final Block CITRUS_SAPLING = new SaplingBlock(new CitrusSaplingGenerator(), FabricBlockSettings.copy(Blocks.OAK_SAPLING));
	public static final Block POTTED_CITRUS_SAPLING = new FlowerPotBlock(CITRUS_SAPLING, FabricBlockSettings.copy(Blocks.POTTED_OAK_SAPLING));
	public static final Block CITRUS_PLANKS = new Block(FabricBlockSettings.copy(Blocks.OAK_PLANKS));
	public static final Block CITRUS_SLAB = new SlabBlock(FabricBlockSettings.copy(Blocks.OAK_SLAB));
	public static final Block CITRUS_STAIRS = new StairsBlock(CITRUS_PLANKS.getDefaultState(), FabricBlockSettings.copy(Blocks.OAK_STAIRS));
	public static final Block CITRUS_FENCE = new FenceBlock(FabricBlockSettings.copy(Blocks.OAK_FENCE));
	public static final Block CITRUS_FENCE_GATE = new FenceGateBlock(FabricBlockSettings.copy(Blocks.OAK_FENCE_GATE));
	public static final Block CITRUS_BUTTON = new WoodenButtonBlock(FabricBlockSettings.copy(Blocks.OAK_BUTTON));
	public static final Block CITRUS_PRESSURE_PLATE = new PressurePlateBlock(PressurePlateBlock.ActivationRule.EVERYTHING, FabricBlockSettings.copy(Blocks.OAK_PRESSURE_PLATE));
	public static final Block CITRUS_DOOR = new DoorBlock(FabricBlockSettings.copy(Blocks.OAK_DOOR));
	public static final Block CITRUS_TRAPDOOR = new TrapdoorBlock(FabricBlockSettings.copy(Blocks.OAK_TRAPDOOR));
	public static final SignType CITRUS_SIGN_TYPE = SignTypeAccessor.registerNew(SignTypeAccessor.newSignType("citrus"));
	public static final Block CITRUS_SIGN = new ModSignBlock(FabricBlockSettings.copy(Blocks.OAK_SIGN), CITRUS_SIGN_TYPE);
	public static final Block CITRUS_WALL_SIGN = new ModWallSignBlock(FabricBlockSettings.copy(Blocks.OAK_WALL_SIGN).dropsLike(CITRUS_SIGN), CITRUS_SIGN_TYPE);
	public static final Item CITRUS_BOAT = new BoatItem(ModBoatType.CITRUS, new Item.Settings().maxCount(1).group(ModItemGroup.JUNGLE));

	public static final Block COTTONWOOD_LOG = new PillarBlock(FabricBlockSettings.copy(Blocks.OAK_LOG));
	public static final Block COTTONWOOD_WOOD = new PillarBlock(FabricBlockSettings.copy(Blocks.OAK_WOOD));
	public static final Block STRIPPED_COTTONWOOD_LOG = new PillarBlock(FabricBlockSettings.copy(Blocks.STRIPPED_OAK_LOG));
	public static final Block STRIPPED_COTTONWOOD_WOOD = new PillarBlock(FabricBlockSettings.copy(Blocks.STRIPPED_OAK_WOOD));
	public static final Block COTTONWOOD_LEAVES =  new LushLeavesBlock(FabricBlockSettings.copy(Blocks.OAK_LEAVES));
	public static final Block COTTONWOOD_SAPLING = new SaplingBlock(new CottonwoodSaplingGenerator(), FabricBlockSettings.copy(Blocks.OAK_SAPLING));
	public static final Block POTTED_COTTONWOOD_SAPLING = new FlowerPotBlock(COTTONWOOD_SAPLING, FabricBlockSettings.copy(Blocks.POTTED_OAK_SAPLING));
	public static final Block COTTONWOOD_PLANKS = new Block(FabricBlockSettings.copy(Blocks.OAK_PLANKS));
	public static final Block COTTONWOOD_SLAB = new SlabBlock(FabricBlockSettings.copy(Blocks.OAK_SLAB));
	public static final Block COTTONWOOD_STAIRS = new StairsBlock(COTTONWOOD_PLANKS.getDefaultState(), FabricBlockSettings.copy(Blocks.OAK_STAIRS));
	public static final Block COTTONWOOD_FENCE = new FenceBlock(FabricBlockSettings.copy(Blocks.OAK_FENCE));
	public static final Block COTTONWOOD_FENCE_GATE = new FenceGateBlock(FabricBlockSettings.copy(Blocks.OAK_FENCE_GATE));
	public static final Block COTTONWOOD_BUTTON = new WoodenButtonBlock(FabricBlockSettings.copy(Blocks.OAK_BUTTON));
	public static final Block COTTONWOOD_PRESSURE_PLATE = new PressurePlateBlock(PressurePlateBlock.ActivationRule.EVERYTHING, FabricBlockSettings.copy(Blocks.OAK_PRESSURE_PLATE));
	public static final Block COTTONWOOD_DOOR = new DoorBlock(FabricBlockSettings.copy(Blocks.OAK_DOOR));
	public static final Block COTTONWOOD_TRAPDOOR = new TrapdoorBlock(FabricBlockSettings.copy(Blocks.OAK_TRAPDOOR));
	public static final SignType COTTONWOOD_SIGN_TYPE = SignTypeAccessor.registerNew(SignTypeAccessor.newSignType("cottonwood"));
	public static final Block COTTONWOOD_SIGN = new ModSignBlock(FabricBlockSettings.copy(Blocks.OAK_SIGN), COTTONWOOD_SIGN_TYPE);
	public static final Block COTTONWOOD_WALL_SIGN = new ModWallSignBlock(FabricBlockSettings.copy(Blocks.OAK_WALL_SIGN).dropsLike(COTTONWOOD_SIGN), COTTONWOOD_SIGN_TYPE);
	public static final Item COTTONWOOD_BOAT = new BoatItem(ModBoatType.COTTONWOOD, new Item.Settings().maxCount(1).group(ModItemGroup.BIRCH));

	public static final Block CYPRESS_LOG = new PillarBlock(FabricBlockSettings.copy(Blocks.OAK_LOG));
	public static final Block CYPRESS_WOOD = new PillarBlock(FabricBlockSettings.copy(Blocks.OAK_WOOD));
	public static final Block STRIPPED_CYPRESS_LOG = new PillarBlock(FabricBlockSettings.copy(Blocks.STRIPPED_OAK_LOG));
	public static final Block STRIPPED_CYPRESS_WOOD = new PillarBlock(FabricBlockSettings.copy(Blocks.STRIPPED_OAK_WOOD));
	public static final Block CYPRESS_LEAVES =  new LushLeavesBlock(FabricBlockSettings.copy(Blocks.OAK_LEAVES));
	public static final Block CYPRESS_SAPLING = new SaplingBlock(new CypressSaplingGenerator(), FabricBlockSettings.copy(Blocks.OAK_SAPLING));
	public static final Block POTTED_CYPRESS_SAPLING = new FlowerPotBlock(CYPRESS_SAPLING, FabricBlockSettings.copy(Blocks.POTTED_OAK_SAPLING));
	public static final Block CYPRESS_PLANKS = new Block(FabricBlockSettings.copy(Blocks.OAK_PLANKS));
	public static final Block CYPRESS_SLAB = new SlabBlock(FabricBlockSettings.copy(Blocks.OAK_SLAB));
	public static final Block CYPRESS_STAIRS = new StairsBlock(CYPRESS_PLANKS.getDefaultState(), FabricBlockSettings.copy(Blocks.OAK_STAIRS));
	public static final Block CYPRESS_FENCE = new FenceBlock(FabricBlockSettings.copy(Blocks.OAK_FENCE));
	public static final Block CYPRESS_FENCE_GATE = new FenceGateBlock(FabricBlockSettings.copy(Blocks.OAK_FENCE_GATE));
	public static final Block CYPRESS_BUTTON = new WoodenButtonBlock(FabricBlockSettings.copy(Blocks.OAK_BUTTON));
	public static final Block CYPRESS_PRESSURE_PLATE = new PressurePlateBlock(PressurePlateBlock.ActivationRule.EVERYTHING, FabricBlockSettings.copy(Blocks.OAK_PRESSURE_PLATE));
	public static final Block CYPRESS_DOOR = new DoorBlock(FabricBlockSettings.copy(Blocks.OAK_DOOR));
	public static final Block CYPRESS_TRAPDOOR = new TrapdoorBlock(FabricBlockSettings.copy(Blocks.OAK_TRAPDOOR));
	public static final SignType CYPRESS_SIGN_TYPE = SignTypeAccessor.registerNew(SignTypeAccessor.newSignType("cypress"));
	public static final Block CYPRESS_SIGN = new ModSignBlock(FabricBlockSettings.copy(Blocks.OAK_SIGN), CYPRESS_SIGN_TYPE);
	public static final Block CYPRESS_WALL_SIGN = new ModWallSignBlock(FabricBlockSettings.copy(Blocks.OAK_WALL_SIGN).dropsLike(CYPRESS_SIGN), CYPRESS_SIGN_TYPE);
	public static final Item CYPRESS_BOAT = new BoatItem(ModBoatType.CYPRESS, new Item.Settings().maxCount(1).group(ModItemGroup.ACACIA));

	public static final Block EBONY_LOG = new PillarBlock(FabricBlockSettings.copy(Blocks.OAK_LOG));
	public static final Block EBONY_WOOD = new PillarBlock(FabricBlockSettings.copy(Blocks.OAK_WOOD));
	public static final Block STRIPPED_EBONY_LOG = new PillarBlock(FabricBlockSettings.copy(Blocks.STRIPPED_OAK_LOG));
	public static final Block STRIPPED_EBONY_WOOD = new PillarBlock(FabricBlockSettings.copy(Blocks.STRIPPED_OAK_WOOD));
	public static final Block EBONY_LEAVES =  new LushLeavesBlock(FabricBlockSettings.copy(Blocks.OAK_LEAVES));
	public static final Block EBONY_SAPLING = new SaplingBlock(new EbonySaplingGenerator(), FabricBlockSettings.copy(Blocks.OAK_SAPLING));
	public static final Block POTTED_EBONY_SAPLING = new FlowerPotBlock(EBONY_SAPLING, FabricBlockSettings.copy(Blocks.POTTED_OAK_SAPLING));
	public static final Block EBONY_PLANKS = new Block(FabricBlockSettings.copy(Blocks.OAK_PLANKS));
	public static final Block EBONY_SLAB = new SlabBlock(FabricBlockSettings.copy(Blocks.OAK_SLAB));
	public static final Block EBONY_STAIRS = new StairsBlock(EBONY_PLANKS.getDefaultState(), FabricBlockSettings.copy(Blocks.OAK_STAIRS));
	public static final Block EBONY_FENCE = new FenceBlock(FabricBlockSettings.copy(Blocks.OAK_FENCE));
	public static final Block EBONY_FENCE_GATE = new FenceGateBlock(FabricBlockSettings.copy(Blocks.OAK_FENCE_GATE));
	public static final Block EBONY_BUTTON = new WoodenButtonBlock(FabricBlockSettings.copy(Blocks.OAK_BUTTON));
	public static final Block EBONY_PRESSURE_PLATE = new PressurePlateBlock(PressurePlateBlock.ActivationRule.EVERYTHING, FabricBlockSettings.copy(Blocks.OAK_PRESSURE_PLATE));
	public static final Block EBONY_DOOR = new DoorBlock(FabricBlockSettings.copy(Blocks.OAK_DOOR));
	public static final Block EBONY_TRAPDOOR = new TrapdoorBlock(FabricBlockSettings.copy(Blocks.OAK_TRAPDOOR));
	public static final SignType EBONY_SIGN_TYPE = SignTypeAccessor.registerNew(SignTypeAccessor.newSignType("ebony"));
	public static final Block EBONY_SIGN = new ModSignBlock(FabricBlockSettings.copy(Blocks.OAK_SIGN), EBONY_SIGN_TYPE);
	public static final Block EBONY_WALL_SIGN = new ModWallSignBlock(FabricBlockSettings.copy(Blocks.OAK_WALL_SIGN).dropsLike(EBONY_SIGN), EBONY_SIGN_TYPE);
	public static final Item EBONY_BOAT = new BoatItem(ModBoatType.EBONY, new Item.Settings().maxCount(1).group(ModItemGroup.JUNGLE));
	
	public static final Block FIR_LOG = new PillarBlock(FabricBlockSettings.copy(Blocks.OAK_LOG));
	public static final Block FIR_WOOD = new PillarBlock(FabricBlockSettings.copy(Blocks.OAK_WOOD));
	public static final Block STRIPPED_FIR_LOG = new PillarBlock(FabricBlockSettings.copy(Blocks.STRIPPED_OAK_LOG));
	public static final Block STRIPPED_FIR_WOOD = new PillarBlock(FabricBlockSettings.copy(Blocks.STRIPPED_OAK_WOOD));
	public static final Block FIR_LEAVES =  new LushLeavesBlock(FabricBlockSettings.copy(Blocks.OAK_LEAVES));
	public static final Block FIR_SAPLING = new SaplingBlock(new FirSaplingGenerator(), FabricBlockSettings.copy(Blocks.OAK_SAPLING));
	public static final Block POTTED_FIR_SAPLING = new FlowerPotBlock(FIR_SAPLING, FabricBlockSettings.copy(Blocks.POTTED_OAK_SAPLING));
	public static final Block FIR_PLANKS = new Block(FabricBlockSettings.copy(Blocks.OAK_PLANKS));
	public static final Block FIR_SLAB = new SlabBlock(FabricBlockSettings.copy(Blocks.OAK_SLAB));
	public static final Block FIR_STAIRS = new StairsBlock(FIR_PLANKS.getDefaultState(), FabricBlockSettings.copy(Blocks.OAK_STAIRS));
	public static final Block FIR_FENCE = new FenceBlock(FabricBlockSettings.copy(Blocks.OAK_FENCE));
	public static final Block FIR_FENCE_GATE = new FenceGateBlock(FabricBlockSettings.copy(Blocks.OAK_FENCE_GATE));
	public static final Block FIR_BUTTON = new WoodenButtonBlock(FabricBlockSettings.copy(Blocks.OAK_BUTTON));
	public static final Block FIR_PRESSURE_PLATE = new PressurePlateBlock(PressurePlateBlock.ActivationRule.EVERYTHING, FabricBlockSettings.copy(Blocks.OAK_PRESSURE_PLATE));
	public static final Block FIR_DOOR = new DoorBlock(FabricBlockSettings.copy(Blocks.OAK_DOOR));
	public static final Block FIR_TRAPDOOR = new TrapdoorBlock(FabricBlockSettings.copy(Blocks.OAK_TRAPDOOR));
	public static final SignType FIR_SIGN_TYPE = SignTypeAccessor.registerNew(SignTypeAccessor.newSignType("fir"));
	public static final Block FIR_SIGN = new ModSignBlock(FabricBlockSettings.copy(Blocks.OAK_SIGN), FIR_SIGN_TYPE);
	public static final Block FIR_WALL_SIGN = new ModWallSignBlock(FabricBlockSettings.copy(Blocks.OAK_WALL_SIGN).dropsLike(FIR_SIGN), FIR_SIGN_TYPE);
	public static final Item FIR_BOAT = new BoatItem(ModBoatType.FIR, new Item.Settings().maxCount(1).group(ModItemGroup.SPRUCE));

	public static final Block GUM_LOG = new PillarBlock(FabricBlockSettings.copy(Blocks.OAK_LOG));
	public static final Block GUM_WOOD = new PillarBlock(FabricBlockSettings.copy(Blocks.OAK_WOOD));
	public static final Block STRIPPED_GUM_LOG = new PillarBlock(FabricBlockSettings.copy(Blocks.STRIPPED_OAK_LOG));
	public static final Block STRIPPED_GUM_WOOD = new PillarBlock(FabricBlockSettings.copy(Blocks.STRIPPED_OAK_WOOD));
	public static final Block GUM_LEAVES =  new LushLeavesBlock(FabricBlockSettings.copy(Blocks.OAK_LEAVES));
	public static final Block GUM_SAPLING = new SaplingBlock(new GumSaplingGenerator(), FabricBlockSettings.copy(Blocks.OAK_SAPLING));
	public static final Block POTTED_GUM_SAPLING = new FlowerPotBlock(GUM_SAPLING, FabricBlockSettings.copy(Blocks.POTTED_OAK_SAPLING));
	public static final Block GUM_PLANKS = new Block(FabricBlockSettings.copy(Blocks.OAK_PLANKS));
	public static final Block GUM_SLAB = new SlabBlock(FabricBlockSettings.copy(Blocks.OAK_SLAB));
	public static final Block GUM_STAIRS = new StairsBlock(GUM_PLANKS.getDefaultState(), FabricBlockSettings.copy(Blocks.OAK_STAIRS));
	public static final Block GUM_FENCE = new FenceBlock(FabricBlockSettings.copy(Blocks.OAK_FENCE));
	public static final Block GUM_FENCE_GATE = new FenceGateBlock(FabricBlockSettings.copy(Blocks.OAK_FENCE_GATE));
	public static final Block GUM_BUTTON = new WoodenButtonBlock(FabricBlockSettings.copy(Blocks.OAK_BUTTON));
	public static final Block GUM_PRESSURE_PLATE = new PressurePlateBlock(PressurePlateBlock.ActivationRule.EVERYTHING, FabricBlockSettings.copy(Blocks.OAK_PRESSURE_PLATE));
	public static final Block GUM_DOOR = new DoorBlock(FabricBlockSettings.copy(Blocks.OAK_DOOR));
	public static final Block GUM_TRAPDOOR = new TrapdoorBlock(FabricBlockSettings.copy(Blocks.OAK_TRAPDOOR));
	public static final SignType GUM_SIGN_TYPE = SignTypeAccessor.registerNew(SignTypeAccessor.newSignType("gum"));
	public static final Block GUM_SIGN = new ModSignBlock(FabricBlockSettings.copy(Blocks.OAK_SIGN), GUM_SIGN_TYPE);
	public static final Block GUM_WALL_SIGN = new ModWallSignBlock(FabricBlockSettings.copy(Blocks.OAK_WALL_SIGN).dropsLike(GUM_SIGN), GUM_SIGN_TYPE);
	public static final Item GUM_BOAT = new BoatItem(ModBoatType.GUM, new Item.Settings().maxCount(1).group(ModItemGroup.ACACIA));

	public static final Block HAWTHORN_LOG = new PillarBlock(FabricBlockSettings.copy(Blocks.OAK_LOG));
	public static final Block HAWTHORN_WOOD = new PillarBlock(FabricBlockSettings.copy(Blocks.OAK_WOOD));
	public static final Block STRIPPED_HAWTHORN_LOG = new PillarBlock(FabricBlockSettings.copy(Blocks.STRIPPED_OAK_LOG));
	public static final Block STRIPPED_HAWTHORN_WOOD = new PillarBlock(FabricBlockSettings.copy(Blocks.STRIPPED_OAK_WOOD));
	public static final Block HAWTHORN_LEAVES =  new LushLeavesBlock(FabricBlockSettings.copy(Blocks.OAK_LEAVES));
	public static final Block HAWTHORN_SAPLING = new SaplingBlock(new HawthornSaplingGenerator(), FabricBlockSettings.copy(Blocks.OAK_SAPLING));
	public static final Block POTTED_HAWTHORN_SAPLING = new FlowerPotBlock(HAWTHORN_SAPLING, FabricBlockSettings.copy(Blocks.POTTED_OAK_SAPLING));
	public static final Block HAWTHORN_PLANKS = new Block(FabricBlockSettings.copy(Blocks.OAK_PLANKS));
	public static final Block HAWTHORN_SLAB = new SlabBlock(FabricBlockSettings.copy(Blocks.OAK_SLAB));
	public static final Block HAWTHORN_STAIRS = new StairsBlock(HAWTHORN_PLANKS.getDefaultState(), FabricBlockSettings.copy(Blocks.OAK_STAIRS));
	public static final Block HAWTHORN_FENCE = new FenceBlock(FabricBlockSettings.copy(Blocks.OAK_FENCE));
	public static final Block HAWTHORN_FENCE_GATE = new FenceGateBlock(FabricBlockSettings.copy(Blocks.OAK_FENCE_GATE));
	public static final Block HAWTHORN_BUTTON = new WoodenButtonBlock(FabricBlockSettings.copy(Blocks.OAK_BUTTON));
	public static final Block HAWTHORN_PRESSURE_PLATE = new PressurePlateBlock(PressurePlateBlock.ActivationRule.EVERYTHING, FabricBlockSettings.copy(Blocks.OAK_PRESSURE_PLATE));
	public static final Block HAWTHORN_DOOR = new DoorBlock(FabricBlockSettings.copy(Blocks.OAK_DOOR));
	public static final Block HAWTHORN_TRAPDOOR = new TrapdoorBlock(FabricBlockSettings.copy(Blocks.OAK_TRAPDOOR));
	public static final SignType HAWTHORN_SIGN_TYPE = SignTypeAccessor.registerNew(SignTypeAccessor.newSignType("hawthorn"));
	public static final Block HAWTHORN_SIGN = new ModSignBlock(FabricBlockSettings.copy(Blocks.OAK_SIGN), HAWTHORN_SIGN_TYPE);
	public static final Block HAWTHORN_WALL_SIGN = new ModWallSignBlock(FabricBlockSettings.copy(Blocks.OAK_WALL_SIGN).dropsLike(HAWTHORN_SIGN), HAWTHORN_SIGN_TYPE);
	public static final Item HAWTHORN_BOAT = new BoatItem(ModBoatType.HAWTHORN, new Item.Settings().maxCount(1).group(ModItemGroup.BIRCH));

	public static final Block HAZEL_LOG = new PillarBlock(FabricBlockSettings.copy(Blocks.OAK_LOG));
	public static final Block HAZEL_WOOD = new PillarBlock(FabricBlockSettings.copy(Blocks.OAK_WOOD));
	public static final Block STRIPPED_HAZEL_LOG = new PillarBlock(FabricBlockSettings.copy(Blocks.STRIPPED_OAK_LOG));
	public static final Block STRIPPED_HAZEL_WOOD = new PillarBlock(FabricBlockSettings.copy(Blocks.STRIPPED_OAK_WOOD));
	public static final Block HAZEL_LEAVES =  new LushLeavesBlock(FabricBlockSettings.copy(Blocks.OAK_LEAVES));
	public static final Block HAZEL_SAPLING = new SaplingBlock(new HazelSaplingGenerator(), FabricBlockSettings.copy(Blocks.OAK_SAPLING));
	public static final Block POTTED_HAZEL_SAPLING = new FlowerPotBlock(HAZEL_SAPLING, FabricBlockSettings.copy(Blocks.POTTED_OAK_SAPLING));
	public static final Block HAZEL_PLANKS = new Block(FabricBlockSettings.copy(Blocks.OAK_PLANKS));
	public static final Block HAZEL_SLAB = new SlabBlock(FabricBlockSettings.copy(Blocks.OAK_SLAB));
	public static final Block HAZEL_STAIRS = new StairsBlock(HAZEL_PLANKS.getDefaultState(), FabricBlockSettings.copy(Blocks.OAK_STAIRS));
	public static final Block HAZEL_FENCE = new FenceBlock(FabricBlockSettings.copy(Blocks.OAK_FENCE));
	public static final Block HAZEL_FENCE_GATE = new FenceGateBlock(FabricBlockSettings.copy(Blocks.OAK_FENCE_GATE));
	public static final Block HAZEL_BUTTON = new WoodenButtonBlock(FabricBlockSettings.copy(Blocks.OAK_BUTTON));
	public static final Block HAZEL_PRESSURE_PLATE = new PressurePlateBlock(PressurePlateBlock.ActivationRule.EVERYTHING, FabricBlockSettings.copy(Blocks.OAK_PRESSURE_PLATE));
	public static final Block HAZEL_DOOR = new DoorBlock(FabricBlockSettings.copy(Blocks.OAK_DOOR));
	public static final Block HAZEL_TRAPDOOR = new TrapdoorBlock(FabricBlockSettings.copy(Blocks.OAK_TRAPDOOR));
	public static final SignType HAZEL_SIGN_TYPE = SignTypeAccessor.registerNew(SignTypeAccessor.newSignType("hazel"));
	public static final Block HAZEL_SIGN = new ModSignBlock(FabricBlockSettings.copy(Blocks.OAK_SIGN), HAZEL_SIGN_TYPE);
	public static final Block HAZEL_WALL_SIGN = new ModWallSignBlock(FabricBlockSettings.copy(Blocks.OAK_WALL_SIGN).dropsLike(HAZEL_SIGN), HAZEL_SIGN_TYPE);
	public static final Item HAZEL_BOAT = new BoatItem(ModBoatType.HAZEL, new Item.Settings().maxCount(1).group(ModItemGroup.OAK));

	public static final Block HEMLOCK_LOG = new PillarBlock(FabricBlockSettings.copy(Blocks.OAK_LOG));
	public static final Block HEMLOCK_WOOD = new PillarBlock(FabricBlockSettings.copy(Blocks.OAK_WOOD));
	public static final Block STRIPPED_HEMLOCK_LOG = new PillarBlock(FabricBlockSettings.copy(Blocks.STRIPPED_OAK_LOG));
	public static final Block STRIPPED_HEMLOCK_WOOD = new PillarBlock(FabricBlockSettings.copy(Blocks.STRIPPED_OAK_WOOD));
	public static final Block HEMLOCK_LEAVES =  new LushLeavesBlock(FabricBlockSettings.copy(Blocks.OAK_LEAVES));
	public static final Block HEMLOCK_SAPLING = new SaplingBlock(new HemlockSaplingGenerator(), FabricBlockSettings.copy(Blocks.OAK_SAPLING));
	public static final Block POTTED_HEMLOCK_SAPLING = new FlowerPotBlock(HEMLOCK_SAPLING, FabricBlockSettings.copy(Blocks.POTTED_OAK_SAPLING));
	public static final Block HEMLOCK_PLANKS = new Block(FabricBlockSettings.copy(Blocks.OAK_PLANKS));
	public static final Block HEMLOCK_SLAB = new SlabBlock(FabricBlockSettings.copy(Blocks.OAK_SLAB));
	public static final Block HEMLOCK_STAIRS = new StairsBlock(HEMLOCK_PLANKS.getDefaultState(), FabricBlockSettings.copy(Blocks.OAK_STAIRS));
	public static final Block HEMLOCK_FENCE = new FenceBlock(FabricBlockSettings.copy(Blocks.OAK_FENCE));
	public static final Block HEMLOCK_FENCE_GATE = new FenceGateBlock(FabricBlockSettings.copy(Blocks.OAK_FENCE_GATE));
	public static final Block HEMLOCK_BUTTON = new WoodenButtonBlock(FabricBlockSettings.copy(Blocks.OAK_BUTTON));
	public static final Block HEMLOCK_PRESSURE_PLATE = new PressurePlateBlock(PressurePlateBlock.ActivationRule.EVERYTHING, FabricBlockSettings.copy(Blocks.OAK_PRESSURE_PLATE));
	public static final Block HEMLOCK_DOOR = new DoorBlock(FabricBlockSettings.copy(Blocks.OAK_DOOR));
	public static final Block HEMLOCK_TRAPDOOR = new TrapdoorBlock(FabricBlockSettings.copy(Blocks.OAK_TRAPDOOR));
	public static final SignType HEMLOCK_SIGN_TYPE = SignTypeAccessor.registerNew(SignTypeAccessor.newSignType("hemlock"));
	public static final Block HEMLOCK_SIGN = new ModSignBlock(FabricBlockSettings.copy(Blocks.OAK_SIGN), HEMLOCK_SIGN_TYPE);
	public static final Block HEMLOCK_WALL_SIGN = new ModWallSignBlock(FabricBlockSettings.copy(Blocks.OAK_WALL_SIGN).dropsLike(HEMLOCK_SIGN), HEMLOCK_SIGN_TYPE);
	public static final Item HEMLOCK_BOAT = new BoatItem(ModBoatType.HEMLOCK, new Item.Settings().maxCount(1).group(ModItemGroup.SPRUCE));

	public static final Block HICKORY_LOG = new PillarBlock(FabricBlockSettings.copy(Blocks.OAK_LOG));
	public static final Block HICKORY_WOOD = new PillarBlock(FabricBlockSettings.copy(Blocks.OAK_WOOD));
	public static final Block STRIPPED_HICKORY_LOG = new PillarBlock(FabricBlockSettings.copy(Blocks.STRIPPED_OAK_LOG));
	public static final Block STRIPPED_HICKORY_WOOD = new PillarBlock(FabricBlockSettings.copy(Blocks.STRIPPED_OAK_WOOD));
	public static final Block HICKORY_LEAVES =  new LushLeavesBlock(FabricBlockSettings.copy(Blocks.OAK_LEAVES));
	public static final Block HICKORY_SAPLING = new SaplingBlock(new HickorySaplingGenerator(), FabricBlockSettings.copy(Blocks.OAK_SAPLING));
	public static final Block POTTED_HICKORY_SAPLING = new FlowerPotBlock(HICKORY_SAPLING, FabricBlockSettings.copy(Blocks.POTTED_OAK_SAPLING));
	public static final Block HICKORY_PLANKS = new Block(FabricBlockSettings.copy(Blocks.OAK_PLANKS));
	public static final Block HICKORY_SLAB = new SlabBlock(FabricBlockSettings.copy(Blocks.OAK_SLAB));
	public static final Block HICKORY_STAIRS = new StairsBlock(HICKORY_PLANKS.getDefaultState(), FabricBlockSettings.copy(Blocks.OAK_STAIRS));
	public static final Block HICKORY_FENCE = new FenceBlock(FabricBlockSettings.copy(Blocks.OAK_FENCE));
	public static final Block HICKORY_FENCE_GATE = new FenceGateBlock(FabricBlockSettings.copy(Blocks.OAK_FENCE_GATE));
	public static final Block HICKORY_BUTTON = new WoodenButtonBlock(FabricBlockSettings.copy(Blocks.OAK_BUTTON));
	public static final Block HICKORY_PRESSURE_PLATE = new PressurePlateBlock(PressurePlateBlock.ActivationRule.EVERYTHING, FabricBlockSettings.copy(Blocks.OAK_PRESSURE_PLATE));
	public static final Block HICKORY_DOOR = new DoorBlock(FabricBlockSettings.copy(Blocks.OAK_DOOR));
	public static final Block HICKORY_TRAPDOOR = new TrapdoorBlock(FabricBlockSettings.copy(Blocks.OAK_TRAPDOOR));
	public static final SignType HICKORY_SIGN_TYPE = SignTypeAccessor.registerNew(SignTypeAccessor.newSignType("hickory"));
	public static final Block HICKORY_SIGN = new ModSignBlock(FabricBlockSettings.copy(Blocks.OAK_SIGN), HICKORY_SIGN_TYPE);
	public static final Block HICKORY_WALL_SIGN = new ModWallSignBlock(FabricBlockSettings.copy(Blocks.OAK_WALL_SIGN).dropsLike(HICKORY_SIGN), HICKORY_SIGN_TYPE);
	public static final Item HICKORY_BOAT = new BoatItem(ModBoatType.HICKORY, new Item.Settings().maxCount(1).group(ModItemGroup.DARK_OAK));

	public static final Block JUNIPER_LOG = new PillarBlock(FabricBlockSettings.copy(Blocks.OAK_LOG));
	public static final Block JUNIPER_WOOD = new PillarBlock(FabricBlockSettings.copy(Blocks.OAK_WOOD));
	public static final Block STRIPPED_JUNIPER_LOG = new PillarBlock(FabricBlockSettings.copy(Blocks.STRIPPED_OAK_LOG));
	public static final Block STRIPPED_JUNIPER_WOOD = new PillarBlock(FabricBlockSettings.copy(Blocks.STRIPPED_OAK_WOOD));
	public static final Block JUNIPER_LEAVES =  new LushLeavesBlock(FabricBlockSettings.copy(Blocks.OAK_LEAVES));
	public static final Block JUNIPER_SAPLING = new SaplingBlock(new JuniperSaplingGenerator(), FabricBlockSettings.copy(Blocks.OAK_SAPLING));
	public static final Block POTTED_JUNIPER_SAPLING = new FlowerPotBlock(JUNIPER_SAPLING, FabricBlockSettings.copy(Blocks.POTTED_OAK_SAPLING));
	public static final Block JUNIPER_PLANKS = new Block(FabricBlockSettings.copy(Blocks.OAK_PLANKS));
	public static final Block JUNIPER_SLAB = new SlabBlock(FabricBlockSettings.copy(Blocks.OAK_SLAB));
	public static final Block JUNIPER_STAIRS = new StairsBlock(JUNIPER_PLANKS.getDefaultState(), FabricBlockSettings.copy(Blocks.OAK_STAIRS));
	public static final Block JUNIPER_FENCE = new FenceBlock(FabricBlockSettings.copy(Blocks.OAK_FENCE));
	public static final Block JUNIPER_FENCE_GATE = new FenceGateBlock(FabricBlockSettings.copy(Blocks.OAK_FENCE_GATE));
	public static final Block JUNIPER_BUTTON = new WoodenButtonBlock(FabricBlockSettings.copy(Blocks.OAK_BUTTON));
	public static final Block JUNIPER_PRESSURE_PLATE = new PressurePlateBlock(PressurePlateBlock.ActivationRule.EVERYTHING, FabricBlockSettings.copy(Blocks.OAK_PRESSURE_PLATE));
	public static final Block JUNIPER_DOOR = new DoorBlock(FabricBlockSettings.copy(Blocks.OAK_DOOR));
	public static final Block JUNIPER_TRAPDOOR = new TrapdoorBlock(FabricBlockSettings.copy(Blocks.OAK_TRAPDOOR));
	public static final SignType JUNIPER_SIGN_TYPE = SignTypeAccessor.registerNew(SignTypeAccessor.newSignType("juniper"));
	public static final Block JUNIPER_SIGN = new ModSignBlock(FabricBlockSettings.copy(Blocks.OAK_SIGN), JUNIPER_SIGN_TYPE);
	public static final Block JUNIPER_WALL_SIGN = new ModWallSignBlock(FabricBlockSettings.copy(Blocks.OAK_WALL_SIGN).dropsLike(JUNIPER_SIGN), JUNIPER_SIGN_TYPE);
	public static final Item JUNIPER_BOAT = new BoatItem(ModBoatType.JUNIPER, new Item.Settings().maxCount(1).group(ModItemGroup.ACACIA));

	public static final Block LARCH_LOG = new PillarBlock(FabricBlockSettings.copy(Blocks.OAK_LOG));
	public static final Block LARCH_WOOD = new PillarBlock(FabricBlockSettings.copy(Blocks.OAK_WOOD));
	public static final Block STRIPPED_LARCH_LOG = new PillarBlock(FabricBlockSettings.copy(Blocks.STRIPPED_OAK_LOG));
	public static final Block STRIPPED_LARCH_WOOD = new PillarBlock(FabricBlockSettings.copy(Blocks.STRIPPED_OAK_WOOD));
	public static final Block LARCH_LEAVES =  new LushLeavesBlock(FabricBlockSettings.copy(Blocks.OAK_LEAVES));
	public static final Block LARCH_SAPLING = new SaplingBlock(new LarchSaplingGenerator(), FabricBlockSettings.copy(Blocks.OAK_SAPLING));
	public static final Block POTTED_LARCH_SAPLING = new FlowerPotBlock(LARCH_SAPLING, FabricBlockSettings.copy(Blocks.POTTED_OAK_SAPLING));
	public static final Block LARCH_PLANKS = new Block(FabricBlockSettings.copy(Blocks.OAK_PLANKS));
	public static final Block LARCH_SLAB = new SlabBlock(FabricBlockSettings.copy(Blocks.OAK_SLAB));
	public static final Block LARCH_STAIRS = new StairsBlock(LARCH_PLANKS.getDefaultState(), FabricBlockSettings.copy(Blocks.OAK_STAIRS));
	public static final Block LARCH_FENCE = new FenceBlock(FabricBlockSettings.copy(Blocks.OAK_FENCE));
	public static final Block LARCH_FENCE_GATE = new FenceGateBlock(FabricBlockSettings.copy(Blocks.OAK_FENCE_GATE));
	public static final Block LARCH_BUTTON = new WoodenButtonBlock(FabricBlockSettings.copy(Blocks.OAK_BUTTON));
	public static final Block LARCH_PRESSURE_PLATE = new PressurePlateBlock(PressurePlateBlock.ActivationRule.EVERYTHING, FabricBlockSettings.copy(Blocks.OAK_PRESSURE_PLATE));
	public static final Block LARCH_DOOR = new DoorBlock(FabricBlockSettings.copy(Blocks.OAK_DOOR));
	public static final Block LARCH_TRAPDOOR = new TrapdoorBlock(FabricBlockSettings.copy(Blocks.OAK_TRAPDOOR));
	public static final SignType LARCH_SIGN_TYPE = SignTypeAccessor.registerNew(SignTypeAccessor.newSignType("larch"));
	public static final Block LARCH_SIGN = new ModSignBlock(FabricBlockSettings.copy(Blocks.OAK_SIGN), LARCH_SIGN_TYPE);
	public static final Block LARCH_WALL_SIGN = new ModWallSignBlock(FabricBlockSettings.copy(Blocks.OAK_WALL_SIGN).dropsLike(LARCH_SIGN), LARCH_SIGN_TYPE);
	public static final Item LARCH_BOAT = new BoatItem(ModBoatType.LARCH, new Item.Settings().maxCount(1).group(ModItemGroup.SPRUCE));

	public static final Block MAHOGANY_LOG = new PillarBlock(FabricBlockSettings.copy(Blocks.OAK_LOG));
	public static final Block MAHOGANY_WOOD = new PillarBlock(FabricBlockSettings.copy(Blocks.OAK_WOOD));
	public static final Block STRIPPED_MAHOGANY_LOG = new PillarBlock(FabricBlockSettings.copy(Blocks.STRIPPED_OAK_LOG));
	public static final Block STRIPPED_MAHOGANY_WOOD = new PillarBlock(FabricBlockSettings.copy(Blocks.STRIPPED_OAK_WOOD));
	public static final Block MAHOGANY_LEAVES =  new LushLeavesBlock(FabricBlockSettings.copy(Blocks.OAK_LEAVES));
	public static final Block MAHOGANY_SAPLING = new SaplingBlock(new MahoganySaplingGenerator(), FabricBlockSettings.copy(Blocks.OAK_SAPLING));
	public static final Block POTTED_MAHOGANY_SAPLING = new FlowerPotBlock(MAHOGANY_SAPLING, FabricBlockSettings.copy(Blocks.POTTED_OAK_SAPLING));
	public static final Block MAHOGANY_PLANKS = new Block(FabricBlockSettings.copy(Blocks.OAK_PLANKS));
	public static final Block MAHOGANY_SLAB = new SlabBlock(FabricBlockSettings.copy(Blocks.OAK_SLAB));
	public static final Block MAHOGANY_STAIRS = new StairsBlock(MAHOGANY_PLANKS.getDefaultState(), FabricBlockSettings.copy(Blocks.OAK_STAIRS));
	public static final Block MAHOGANY_FENCE = new FenceBlock(FabricBlockSettings.copy(Blocks.OAK_FENCE));
	public static final Block MAHOGANY_FENCE_GATE = new FenceGateBlock(FabricBlockSettings.copy(Blocks.OAK_FENCE_GATE));
	public static final Block MAHOGANY_BUTTON = new WoodenButtonBlock(FabricBlockSettings.copy(Blocks.OAK_BUTTON));
	public static final Block MAHOGANY_PRESSURE_PLATE = new PressurePlateBlock(PressurePlateBlock.ActivationRule.EVERYTHING, FabricBlockSettings.copy(Blocks.OAK_PRESSURE_PLATE));
	public static final Block MAHOGANY_DOOR = new DoorBlock(FabricBlockSettings.copy(Blocks.OAK_DOOR));
	public static final Block MAHOGANY_TRAPDOOR = new TrapdoorBlock(FabricBlockSettings.copy(Blocks.OAK_TRAPDOOR));
	public static final SignType MAHOGANY_SIGN_TYPE = SignTypeAccessor.registerNew(SignTypeAccessor.newSignType("mahogany"));
	public static final Block MAHOGANY_SIGN = new ModSignBlock(FabricBlockSettings.copy(Blocks.OAK_SIGN), MAHOGANY_SIGN_TYPE);
	public static final Block MAHOGANY_WALL_SIGN = new ModWallSignBlock(FabricBlockSettings.copy(Blocks.OAK_WALL_SIGN).dropsLike(MAHOGANY_SIGN), MAHOGANY_SIGN_TYPE);
	public static final Item MAHOGANY_BOAT = new BoatItem(ModBoatType.MAHOGANY, new Item.Settings().maxCount(1).group(ModItemGroup.JUNGLE));

	public static final Block MAPLE_LOG = new PillarBlock(FabricBlockSettings.copy(Blocks.OAK_LOG));
	public static final Block MAPLE_WOOD = new PillarBlock(FabricBlockSettings.copy(Blocks.OAK_WOOD));
	public static final Block STRIPPED_MAPLE_LOG = new PillarBlock(FabricBlockSettings.copy(Blocks.STRIPPED_OAK_LOG));
	public static final Block STRIPPED_MAPLE_WOOD = new PillarBlock(FabricBlockSettings.copy(Blocks.STRIPPED_OAK_WOOD));
	public static final Block MAPLE_LEAVES =  new LushLeavesBlock(FabricBlockSettings.copy(Blocks.OAK_LEAVES));
	public static final Block MAPLE_SAPLING = new SaplingBlock(new MapleSaplingGenerator(), FabricBlockSettings.copy(Blocks.OAK_SAPLING));
	public static final Block POTTED_MAPLE_SAPLING = new FlowerPotBlock(MAPLE_SAPLING, FabricBlockSettings.copy(Blocks.POTTED_OAK_SAPLING));
	public static final Block MAPLE_PLANKS = new Block(FabricBlockSettings.copy(Blocks.OAK_PLANKS));
	public static final Block MAPLE_SLAB = new SlabBlock(FabricBlockSettings.copy(Blocks.OAK_SLAB));
	public static final Block MAPLE_STAIRS = new StairsBlock(MAPLE_PLANKS.getDefaultState(), FabricBlockSettings.copy(Blocks.OAK_STAIRS));
	public static final Block MAPLE_FENCE = new FenceBlock(FabricBlockSettings.copy(Blocks.OAK_FENCE));
	public static final Block MAPLE_FENCE_GATE = new FenceGateBlock(FabricBlockSettings.copy(Blocks.OAK_FENCE_GATE));
	public static final Block MAPLE_BUTTON = new WoodenButtonBlock(FabricBlockSettings.copy(Blocks.OAK_BUTTON));
	public static final Block MAPLE_PRESSURE_PLATE = new PressurePlateBlock(PressurePlateBlock.ActivationRule.EVERYTHING, FabricBlockSettings.copy(Blocks.OAK_PRESSURE_PLATE));
	public static final Block MAPLE_DOOR = new DoorBlock(FabricBlockSettings.copy(Blocks.OAK_DOOR));
	public static final Block MAPLE_TRAPDOOR = new TrapdoorBlock(FabricBlockSettings.copy(Blocks.OAK_TRAPDOOR));
	public static final SignType MAPLE_SIGN_TYPE = SignTypeAccessor.registerNew(SignTypeAccessor.newSignType("maple"));
	public static final Block MAPLE_SIGN = new ModSignBlock(FabricBlockSettings.copy(Blocks.OAK_SIGN), MAPLE_SIGN_TYPE);
	public static final Block MAPLE_WALL_SIGN = new ModWallSignBlock(FabricBlockSettings.copy(Blocks.OAK_WALL_SIGN).dropsLike(MAPLE_SIGN), MAPLE_SIGN_TYPE);
	public static final Item MAPLE_BOAT = new BoatItem(ModBoatType.MAPLE, new Item.Settings().maxCount(1).group(ModItemGroup.OAK));

	public static final Block MESQUITE_LOG = new PillarBlock(FabricBlockSettings.copy(Blocks.OAK_LOG));
	public static final Block MESQUITE_WOOD = new PillarBlock(FabricBlockSettings.copy(Blocks.OAK_WOOD));
	public static final Block STRIPPED_MESQUITE_LOG = new PillarBlock(FabricBlockSettings.copy(Blocks.STRIPPED_OAK_LOG));
	public static final Block STRIPPED_MESQUITE_WOOD = new PillarBlock(FabricBlockSettings.copy(Blocks.STRIPPED_OAK_WOOD));
	public static final Block MESQUITE_LEAVES =  new LushLeavesBlock(FabricBlockSettings.copy(Blocks.OAK_LEAVES));
	public static final Block MESQUITE_SAPLING = new SaplingBlock(new MesquiteSaplingGenerator(), FabricBlockSettings.copy(Blocks.OAK_SAPLING));
	public static final Block POTTED_MESQUITE_SAPLING = new FlowerPotBlock(MESQUITE_SAPLING, FabricBlockSettings.copy(Blocks.POTTED_OAK_SAPLING));
	public static final Block MESQUITE_PLANKS = new Block(FabricBlockSettings.copy(Blocks.OAK_PLANKS));
	public static final Block MESQUITE_SLAB = new SlabBlock(FabricBlockSettings.copy(Blocks.OAK_SLAB));
	public static final Block MESQUITE_STAIRS = new StairsBlock(MESQUITE_PLANKS.getDefaultState(), FabricBlockSettings.copy(Blocks.OAK_STAIRS));
	public static final Block MESQUITE_FENCE = new FenceBlock(FabricBlockSettings.copy(Blocks.OAK_FENCE));
	public static final Block MESQUITE_FENCE_GATE = new FenceGateBlock(FabricBlockSettings.copy(Blocks.OAK_FENCE_GATE));
	public static final Block MESQUITE_BUTTON = new WoodenButtonBlock(FabricBlockSettings.copy(Blocks.OAK_BUTTON));
	public static final Block MESQUITE_PRESSURE_PLATE = new PressurePlateBlock(PressurePlateBlock.ActivationRule.EVERYTHING, FabricBlockSettings.copy(Blocks.OAK_PRESSURE_PLATE));
	public static final Block MESQUITE_DOOR = new DoorBlock(FabricBlockSettings.copy(Blocks.OAK_DOOR));
	public static final Block MESQUITE_TRAPDOOR = new TrapdoorBlock(FabricBlockSettings.copy(Blocks.OAK_TRAPDOOR));
	public static final SignType MESQUITE_SIGN_TYPE = SignTypeAccessor.registerNew(SignTypeAccessor.newSignType("mesquite"));
	public static final Block MESQUITE_SIGN = new ModSignBlock(FabricBlockSettings.copy(Blocks.OAK_SIGN), MESQUITE_SIGN_TYPE);
	public static final Block MESQUITE_WALL_SIGN = new ModWallSignBlock(FabricBlockSettings.copy(Blocks.OAK_WALL_SIGN).dropsLike(MESQUITE_SIGN), MESQUITE_SIGN_TYPE);
	public static final Item MESQUITE_BOAT = new BoatItem(ModBoatType.MESQUITE, new Item.Settings().maxCount(1).group(ModItemGroup.ACACIA));

	public static final Block PEACH_LOG = new PillarBlock(FabricBlockSettings.copy(Blocks.OAK_LOG));
	public static final Block PEACH_WOOD = new PillarBlock(FabricBlockSettings.copy(Blocks.OAK_WOOD));
	public static final Block STRIPPED_PEACH_LOG = new PillarBlock(FabricBlockSettings.copy(Blocks.STRIPPED_OAK_LOG));
	public static final Block STRIPPED_PEACH_WOOD = new PillarBlock(FabricBlockSettings.copy(Blocks.STRIPPED_OAK_WOOD));
	public static final Block PEACH_LEAVES =  new LushLeavesBlock(FabricBlockSettings.copy(Blocks.OAK_LEAVES));
	public static final Block PEACH_SAPLING = new SaplingBlock(new PeachSaplingGenerator(), FabricBlockSettings.copy(Blocks.OAK_SAPLING));
	public static final Block POTTED_PEACH_SAPLING = new FlowerPotBlock(PEACH_SAPLING, FabricBlockSettings.copy(Blocks.POTTED_OAK_SAPLING));
	public static final Block PEACH_PLANKS = new Block(FabricBlockSettings.copy(Blocks.OAK_PLANKS));
	public static final Block PEACH_SLAB = new SlabBlock(FabricBlockSettings.copy(Blocks.OAK_SLAB));
	public static final Block PEACH_STAIRS = new StairsBlock(PEACH_PLANKS.getDefaultState(), FabricBlockSettings.copy(Blocks.OAK_STAIRS));
	public static final Block PEACH_FENCE = new FenceBlock(FabricBlockSettings.copy(Blocks.OAK_FENCE));
	public static final Block PEACH_FENCE_GATE = new FenceGateBlock(FabricBlockSettings.copy(Blocks.OAK_FENCE_GATE));
	public static final Block PEACH_BUTTON = new WoodenButtonBlock(FabricBlockSettings.copy(Blocks.OAK_BUTTON));
	public static final Block PEACH_PRESSURE_PLATE = new PressurePlateBlock(PressurePlateBlock.ActivationRule.EVERYTHING, FabricBlockSettings.copy(Blocks.OAK_PRESSURE_PLATE));
	public static final Block PEACH_DOOR = new DoorBlock(FabricBlockSettings.copy(Blocks.OAK_DOOR));
	public static final Block PEACH_TRAPDOOR = new TrapdoorBlock(FabricBlockSettings.copy(Blocks.OAK_TRAPDOOR));
	public static final SignType PEACH_SIGN_TYPE = SignTypeAccessor.registerNew(SignTypeAccessor.newSignType("peach"));
	public static final Block PEACH_SIGN = new ModSignBlock(FabricBlockSettings.copy(Blocks.OAK_SIGN), PEACH_SIGN_TYPE);
	public static final Block PEACH_WALL_SIGN = new ModWallSignBlock(FabricBlockSettings.copy(Blocks.OAK_WALL_SIGN).dropsLike(PEACH_SIGN), PEACH_SIGN_TYPE);
	public static final Item PEACH_BOAT = new BoatItem(ModBoatType.PEACH, new Item.Settings().maxCount(1).group(ModItemGroup.DARK_OAK));

	public static final Block PEAR_LOG = new PillarBlock(FabricBlockSettings.copy(Blocks.OAK_LOG));
	public static final Block PEAR_WOOD = new PillarBlock(FabricBlockSettings.copy(Blocks.OAK_WOOD));
	public static final Block STRIPPED_PEAR_LOG = new PillarBlock(FabricBlockSettings.copy(Blocks.STRIPPED_OAK_LOG));
	public static final Block STRIPPED_PEAR_WOOD = new PillarBlock(FabricBlockSettings.copy(Blocks.STRIPPED_OAK_WOOD));
	public static final Block PEAR_LEAVES =  new LushLeavesBlock(FabricBlockSettings.copy(Blocks.OAK_LEAVES));
	public static final Block PEAR_SAPLING = new SaplingBlock(new PearSaplingGenerator(), FabricBlockSettings.copy(Blocks.OAK_SAPLING));
	public static final Block POTTED_PEAR_SAPLING = new FlowerPotBlock(PEAR_SAPLING, FabricBlockSettings.copy(Blocks.POTTED_OAK_SAPLING));
	public static final Block PEAR_PLANKS = new Block(FabricBlockSettings.copy(Blocks.OAK_PLANKS));
	public static final Block PEAR_SLAB = new SlabBlock(FabricBlockSettings.copy(Blocks.OAK_SLAB));
	public static final Block PEAR_STAIRS = new StairsBlock(PEAR_PLANKS.getDefaultState(), FabricBlockSettings.copy(Blocks.OAK_STAIRS));
	public static final Block PEAR_FENCE = new FenceBlock(FabricBlockSettings.copy(Blocks.OAK_FENCE));
	public static final Block PEAR_FENCE_GATE = new FenceGateBlock(FabricBlockSettings.copy(Blocks.OAK_FENCE_GATE));
	public static final Block PEAR_BUTTON = new WoodenButtonBlock(FabricBlockSettings.copy(Blocks.OAK_BUTTON));
	public static final Block PEAR_PRESSURE_PLATE = new PressurePlateBlock(PressurePlateBlock.ActivationRule.EVERYTHING, FabricBlockSettings.copy(Blocks.OAK_PRESSURE_PLATE));
	public static final Block PEAR_DOOR = new DoorBlock(FabricBlockSettings.copy(Blocks.OAK_DOOR));
	public static final Block PEAR_TRAPDOOR = new TrapdoorBlock(FabricBlockSettings.copy(Blocks.OAK_TRAPDOOR));
	public static final SignType PEAR_SIGN_TYPE = SignTypeAccessor.registerNew(SignTypeAccessor.newSignType("pear"));
	public static final Block PEAR_SIGN = new ModSignBlock(FabricBlockSettings.copy(Blocks.OAK_SIGN), PEAR_SIGN_TYPE);
	public static final Block PEAR_WALL_SIGN = new ModWallSignBlock(FabricBlockSettings.copy(Blocks.OAK_WALL_SIGN).dropsLike(PEAR_SIGN), PEAR_SIGN_TYPE);
	public static final Item PEAR_BOAT = new BoatItem(ModBoatType.PEAR, new Item.Settings().maxCount(1).group(ModItemGroup.DARK_OAK));

	public static final Block PINE_LOG = new PillarBlock(FabricBlockSettings.copy(Blocks.OAK_LOG));
	public static final Block PINE_WOOD = new PillarBlock(FabricBlockSettings.copy(Blocks.OAK_WOOD));
	public static final Block STRIPPED_PINE_LOG = new PillarBlock(FabricBlockSettings.copy(Blocks.STRIPPED_OAK_LOG));
	public static final Block STRIPPED_PINE_WOOD = new PillarBlock(FabricBlockSettings.copy(Blocks.STRIPPED_OAK_WOOD));
	public static final Block PINE_LEAVES =  new LushLeavesBlock(FabricBlockSettings.copy(Blocks.OAK_LEAVES));
	public static final Block PINE_SAPLING = new SaplingBlock(new PineSaplingGenerator(), FabricBlockSettings.copy(Blocks.OAK_SAPLING));
	public static final Block POTTED_PINE_SAPLING = new FlowerPotBlock(PINE_SAPLING, FabricBlockSettings.copy(Blocks.POTTED_OAK_SAPLING));
	public static final Block PINE_PLANKS = new Block(FabricBlockSettings.copy(Blocks.OAK_PLANKS));
	public static final Block PINE_SLAB = new SlabBlock(FabricBlockSettings.copy(Blocks.OAK_SLAB));
	public static final Block PINE_STAIRS = new StairsBlock(PINE_PLANKS.getDefaultState(), FabricBlockSettings.copy(Blocks.OAK_STAIRS));
	public static final Block PINE_FENCE = new FenceBlock(FabricBlockSettings.copy(Blocks.OAK_FENCE));
	public static final Block PINE_FENCE_GATE = new FenceGateBlock(FabricBlockSettings.copy(Blocks.OAK_FENCE_GATE));
	public static final Block PINE_BUTTON = new WoodenButtonBlock(FabricBlockSettings.copy(Blocks.OAK_BUTTON));
	public static final Block PINE_PRESSURE_PLATE = new PressurePlateBlock(PressurePlateBlock.ActivationRule.EVERYTHING, FabricBlockSettings.copy(Blocks.OAK_PRESSURE_PLATE));
	public static final Block PINE_DOOR = new DoorBlock(FabricBlockSettings.copy(Blocks.OAK_DOOR));
	public static final Block PINE_TRAPDOOR = new TrapdoorBlock(FabricBlockSettings.copy(Blocks.OAK_TRAPDOOR));
	public static final SignType PINE_SIGN_TYPE = SignTypeAccessor.registerNew(SignTypeAccessor.newSignType("pine"));
	public static final Block PINE_SIGN = new ModSignBlock(FabricBlockSettings.copy(Blocks.OAK_SIGN), PINE_SIGN_TYPE);
	public static final Block PINE_WALL_SIGN = new ModWallSignBlock(FabricBlockSettings.copy(Blocks.OAK_WALL_SIGN).dropsLike(PINE_SIGN), PINE_SIGN_TYPE);
	public static final Item PINE_BOAT = new BoatItem(ModBoatType.PINE, new Item.Settings().maxCount(1).group(ModItemGroup.BIRCH));

	public static final Block REDWOOD_LOG = new PillarBlock(FabricBlockSettings.copy(Blocks.OAK_LOG));
	public static final Block REDWOOD_WOOD = new PillarBlock(FabricBlockSettings.copy(Blocks.OAK_WOOD));
	public static final Block STRIPPED_REDWOOD_LOG = new PillarBlock(FabricBlockSettings.copy(Blocks.STRIPPED_OAK_LOG));
	public static final Block STRIPPED_REDWOOD_WOOD = new PillarBlock(FabricBlockSettings.copy(Blocks.STRIPPED_OAK_WOOD));
	public static final Block REDWOOD_LEAVES =  new LushLeavesBlock(FabricBlockSettings.copy(Blocks.OAK_LEAVES));
	public static final Block REDWOOD_SAPLING = new SaplingBlock(new RedwoodSaplingGenerator(), FabricBlockSettings.copy(Blocks.OAK_SAPLING));
	public static final Block POTTED_REDWOOD_SAPLING = new FlowerPotBlock(REDWOOD_SAPLING, FabricBlockSettings.copy(Blocks.POTTED_OAK_SAPLING));
	public static final Block REDWOOD_PLANKS = new Block(FabricBlockSettings.copy(Blocks.OAK_PLANKS));
	public static final Block REDWOOD_SLAB = new SlabBlock(FabricBlockSettings.copy(Blocks.OAK_SLAB));
	public static final Block REDWOOD_STAIRS = new StairsBlock(REDWOOD_PLANKS.getDefaultState(), FabricBlockSettings.copy(Blocks.OAK_STAIRS));
	public static final Block REDWOOD_FENCE = new FenceBlock(FabricBlockSettings.copy(Blocks.OAK_FENCE));
	public static final Block REDWOOD_FENCE_GATE = new FenceGateBlock(FabricBlockSettings.copy(Blocks.OAK_FENCE_GATE));
	public static final Block REDWOOD_BUTTON = new WoodenButtonBlock(FabricBlockSettings.copy(Blocks.OAK_BUTTON));
	public static final Block REDWOOD_PRESSURE_PLATE = new PressurePlateBlock(PressurePlateBlock.ActivationRule.EVERYTHING, FabricBlockSettings.copy(Blocks.OAK_PRESSURE_PLATE));
	public static final Block REDWOOD_DOOR = new DoorBlock(FabricBlockSettings.copy(Blocks.OAK_DOOR));
	public static final Block REDWOOD_TRAPDOOR = new TrapdoorBlock(FabricBlockSettings.copy(Blocks.OAK_TRAPDOOR));
	public static final SignType REDWOOD_SIGN_TYPE = SignTypeAccessor.registerNew(SignTypeAccessor.newSignType("redwood"));
	public static final Block REDWOOD_SIGN = new ModSignBlock(FabricBlockSettings.copy(Blocks.OAK_SIGN), REDWOOD_SIGN_TYPE);
	public static final Block REDWOOD_WALL_SIGN = new ModWallSignBlock(FabricBlockSettings.copy(Blocks.OAK_WALL_SIGN).dropsLike(REDWOOD_SIGN), REDWOOD_SIGN_TYPE);
	public static final Item REDWOOD_BOAT = new BoatItem(ModBoatType.REDWOOD, new Item.Settings().maxCount(1).group(ModItemGroup.SPRUCE));

	public static final Block ROSEWOOD_LOG = new PillarBlock(FabricBlockSettings.copy(Blocks.OAK_LOG));
	public static final Block ROSEWOOD_WOOD = new PillarBlock(FabricBlockSettings.copy(Blocks.OAK_WOOD));
	public static final Block STRIPPED_ROSEWOOD_LOG = new PillarBlock(FabricBlockSettings.copy(Blocks.STRIPPED_OAK_LOG));
	public static final Block STRIPPED_ROSEWOOD_WOOD = new PillarBlock(FabricBlockSettings.copy(Blocks.STRIPPED_OAK_WOOD));
	public static final Block ROSEWOOD_LEAVES =  new LushLeavesBlock(FabricBlockSettings.copy(Blocks.OAK_LEAVES));
	public static final Block ROSEWOOD_SAPLING = new SaplingBlock(new RosewoodSaplingGenerator(), FabricBlockSettings.copy(Blocks.OAK_SAPLING));
	public static final Block POTTED_ROSEWOOD_SAPLING = new FlowerPotBlock(ROSEWOOD_SAPLING, FabricBlockSettings.copy(Blocks.POTTED_OAK_SAPLING));
	public static final Block ROSEWOOD_PLANKS = new Block(FabricBlockSettings.copy(Blocks.OAK_PLANKS));
	public static final Block ROSEWOOD_SLAB = new SlabBlock(FabricBlockSettings.copy(Blocks.OAK_SLAB));
	public static final Block ROSEWOOD_STAIRS = new StairsBlock(ROSEWOOD_PLANKS.getDefaultState(), FabricBlockSettings.copy(Blocks.OAK_STAIRS));
	public static final Block ROSEWOOD_FENCE = new FenceBlock(FabricBlockSettings.copy(Blocks.OAK_FENCE));
	public static final Block ROSEWOOD_FENCE_GATE = new FenceGateBlock(FabricBlockSettings.copy(Blocks.OAK_FENCE_GATE));
	public static final Block ROSEWOOD_BUTTON = new WoodenButtonBlock(FabricBlockSettings.copy(Blocks.OAK_BUTTON));
	public static final Block ROSEWOOD_PRESSURE_PLATE = new PressurePlateBlock(PressurePlateBlock.ActivationRule.EVERYTHING, FabricBlockSettings.copy(Blocks.OAK_PRESSURE_PLATE));
	public static final Block ROSEWOOD_DOOR = new DoorBlock(FabricBlockSettings.copy(Blocks.OAK_DOOR));
	public static final Block ROSEWOOD_TRAPDOOR = new TrapdoorBlock(FabricBlockSettings.copy(Blocks.OAK_TRAPDOOR));
	public static final SignType ROSEWOOD_SIGN_TYPE = SignTypeAccessor.registerNew(SignTypeAccessor.newSignType("rosewood"));
	public static final Block ROSEWOOD_SIGN = new ModSignBlock(FabricBlockSettings.copy(Blocks.OAK_SIGN), ROSEWOOD_SIGN_TYPE);
	public static final Block ROSEWOOD_WALL_SIGN = new ModWallSignBlock(FabricBlockSettings.copy(Blocks.OAK_WALL_SIGN).dropsLike(ROSEWOOD_SIGN), ROSEWOOD_SIGN_TYPE);
	public static final Item ROSEWOOD_BOAT = new BoatItem(ModBoatType.ROSEWOOD, new Item.Settings().maxCount(1).group(ModItemGroup.JUNGLE));

	public static final Block TEAK_LOG = new PillarBlock(FabricBlockSettings.copy(Blocks.OAK_LOG));
	public static final Block TEAK_WOOD = new PillarBlock(FabricBlockSettings.copy(Blocks.OAK_WOOD));
	public static final Block STRIPPED_TEAK_LOG = new PillarBlock(FabricBlockSettings.copy(Blocks.STRIPPED_OAK_LOG));
	public static final Block STRIPPED_TEAK_WOOD = new PillarBlock(FabricBlockSettings.copy(Blocks.STRIPPED_OAK_WOOD));
	public static final Block TEAK_LEAVES =  new LushLeavesBlock(FabricBlockSettings.copy(Blocks.OAK_LEAVES));
	public static final Block TEAK_SAPLING = new SaplingBlock(new TeakSaplingGenerator(), FabricBlockSettings.copy(Blocks.OAK_SAPLING));
	public static final Block POTTED_TEAK_SAPLING = new FlowerPotBlock(TEAK_SAPLING, FabricBlockSettings.copy(Blocks.POTTED_OAK_SAPLING));
	public static final Block TEAK_PLANKS = new Block(FabricBlockSettings.copy(Blocks.OAK_PLANKS));
	public static final Block TEAK_SLAB = new SlabBlock(FabricBlockSettings.copy(Blocks.OAK_SLAB));
	public static final Block TEAK_STAIRS = new StairsBlock(TEAK_PLANKS.getDefaultState(), FabricBlockSettings.copy(Blocks.OAK_STAIRS));
	public static final Block TEAK_FENCE = new FenceBlock(FabricBlockSettings.copy(Blocks.OAK_FENCE));
	public static final Block TEAK_FENCE_GATE = new FenceGateBlock(FabricBlockSettings.copy(Blocks.OAK_FENCE_GATE));
	public static final Block TEAK_BUTTON = new WoodenButtonBlock(FabricBlockSettings.copy(Blocks.OAK_BUTTON));
	public static final Block TEAK_PRESSURE_PLATE = new PressurePlateBlock(PressurePlateBlock.ActivationRule.EVERYTHING, FabricBlockSettings.copy(Blocks.OAK_PRESSURE_PLATE));
	public static final Block TEAK_DOOR = new DoorBlock(FabricBlockSettings.copy(Blocks.OAK_DOOR));
	public static final Block TEAK_TRAPDOOR = new TrapdoorBlock(FabricBlockSettings.copy(Blocks.OAK_TRAPDOOR));
	public static final SignType TEAK_SIGN_TYPE = SignTypeAccessor.registerNew(SignTypeAccessor.newSignType("teak"));
	public static final Block TEAK_SIGN = new ModSignBlock(FabricBlockSettings.copy(Blocks.OAK_SIGN), TEAK_SIGN_TYPE);
	public static final Block TEAK_WALL_SIGN = new ModWallSignBlock(FabricBlockSettings.copy(Blocks.OAK_WALL_SIGN).dropsLike(TEAK_SIGN), TEAK_SIGN_TYPE);
	public static final Item TEAK_BOAT = new BoatItem(ModBoatType.TEAK, new Item.Settings().maxCount(1).group(ModItemGroup.JUNGLE));

	public static final Block WALNUT_LOG = new PillarBlock(FabricBlockSettings.copy(Blocks.OAK_LOG));
	public static final Block WALNUT_WOOD = new PillarBlock(FabricBlockSettings.copy(Blocks.OAK_WOOD));
	public static final Block STRIPPED_WALNUT_LOG = new PillarBlock(FabricBlockSettings.copy(Blocks.STRIPPED_OAK_LOG));
	public static final Block STRIPPED_WALNUT_WOOD = new PillarBlock(FabricBlockSettings.copy(Blocks.STRIPPED_OAK_WOOD));
	public static final Block WALNUT_LEAVES =  new LushLeavesBlock(FabricBlockSettings.copy(Blocks.OAK_LEAVES));
	public static final Block WALNUT_SAPLING = new SaplingBlock(new WalnutSaplingGenerator(), FabricBlockSettings.copy(Blocks.OAK_SAPLING));
	public static final Block POTTED_WALNUT_SAPLING = new FlowerPotBlock(WALNUT_SAPLING, FabricBlockSettings.copy(Blocks.POTTED_OAK_SAPLING));
	public static final Block WALNUT_PLANKS = new Block(FabricBlockSettings.copy(Blocks.OAK_PLANKS));
	public static final Block WALNUT_SLAB = new SlabBlock(FabricBlockSettings.copy(Blocks.OAK_SLAB));
	public static final Block WALNUT_STAIRS = new StairsBlock(WALNUT_PLANKS.getDefaultState(), FabricBlockSettings.copy(Blocks.OAK_STAIRS));
	public static final Block WALNUT_FENCE = new FenceBlock(FabricBlockSettings.copy(Blocks.OAK_FENCE));
	public static final Block WALNUT_FENCE_GATE = new FenceGateBlock(FabricBlockSettings.copy(Blocks.OAK_FENCE_GATE));
	public static final Block WALNUT_BUTTON = new WoodenButtonBlock(FabricBlockSettings.copy(Blocks.OAK_BUTTON));
	public static final Block WALNUT_PRESSURE_PLATE = new PressurePlateBlock(PressurePlateBlock.ActivationRule.EVERYTHING, FabricBlockSettings.copy(Blocks.OAK_PRESSURE_PLATE));
	public static final Block WALNUT_DOOR = new DoorBlock(FabricBlockSettings.copy(Blocks.OAK_DOOR));
	public static final Block WALNUT_TRAPDOOR = new TrapdoorBlock(FabricBlockSettings.copy(Blocks.OAK_TRAPDOOR));
	public static final SignType WALNUT_SIGN_TYPE = SignTypeAccessor.registerNew(SignTypeAccessor.newSignType("walnut"));
	public static final Block WALNUT_SIGN = new ModSignBlock(FabricBlockSettings.copy(Blocks.OAK_SIGN), WALNUT_SIGN_TYPE);
	public static final Block WALNUT_WALL_SIGN = new ModWallSignBlock(FabricBlockSettings.copy(Blocks.OAK_WALL_SIGN).dropsLike(WALNUT_SIGN), WALNUT_SIGN_TYPE);
	public static final Item WALNUT_BOAT = new BoatItem(ModBoatType.WALNUT, new Item.Settings().maxCount(1).group(ModItemGroup.OAK));

	public static final Block WILLOW_LOG = new PillarBlock(FabricBlockSettings.copy(Blocks.OAK_LOG));
	public static final Block WILLOW_WOOD = new PillarBlock(FabricBlockSettings.copy(Blocks.OAK_WOOD));
	public static final Block STRIPPED_WILLOW_LOG = new PillarBlock(FabricBlockSettings.copy(Blocks.STRIPPED_OAK_LOG));
	public static final Block STRIPPED_WILLOW_WOOD = new PillarBlock(FabricBlockSettings.copy(Blocks.STRIPPED_OAK_WOOD));
	public static final Block WILLOW_LEAVES =  new LushLeavesBlock(FabricBlockSettings.copy(Blocks.OAK_LEAVES));
	public static final Block WILLOW_SAPLING = new SaplingBlock(new WillowSaplingGenerator(), FabricBlockSettings.copy(Blocks.OAK_SAPLING));
	public static final Block POTTED_WILLOW_SAPLING = new FlowerPotBlock(WILLOW_SAPLING, FabricBlockSettings.copy(Blocks.POTTED_OAK_SAPLING));
	public static final Block WILLOW_PLANKS = new Block(FabricBlockSettings.copy(Blocks.OAK_PLANKS));
	public static final Block WILLOW_SLAB = new SlabBlock(FabricBlockSettings.copy(Blocks.OAK_SLAB));
	public static final Block WILLOW_STAIRS = new StairsBlock(WILLOW_PLANKS.getDefaultState(), FabricBlockSettings.copy(Blocks.OAK_STAIRS));
	public static final Block WILLOW_FENCE = new FenceBlock(FabricBlockSettings.copy(Blocks.OAK_FENCE));
	public static final Block WILLOW_FENCE_GATE = new FenceGateBlock(FabricBlockSettings.copy(Blocks.OAK_FENCE_GATE));
	public static final Block WILLOW_BUTTON = new WoodenButtonBlock(FabricBlockSettings.copy(Blocks.OAK_BUTTON));
	public static final Block WILLOW_PRESSURE_PLATE = new PressurePlateBlock(PressurePlateBlock.ActivationRule.EVERYTHING, FabricBlockSettings.copy(Blocks.OAK_PRESSURE_PLATE));
	public static final Block WILLOW_DOOR = new DoorBlock(FabricBlockSettings.copy(Blocks.OAK_DOOR));
	public static final Block WILLOW_TRAPDOOR = new TrapdoorBlock(FabricBlockSettings.copy(Blocks.OAK_TRAPDOOR));
	public static final SignType WILLOW_SIGN_TYPE = SignTypeAccessor.registerNew(SignTypeAccessor.newSignType("willow"));
	public static final Block WILLOW_SIGN = new ModSignBlock(FabricBlockSettings.copy(Blocks.OAK_SIGN), WILLOW_SIGN_TYPE);
	public static final Block WILLOW_WALL_SIGN = new ModWallSignBlock(FabricBlockSettings.copy(Blocks.OAK_WALL_SIGN).dropsLike(WILLOW_SIGN), WILLOW_SIGN_TYPE);
	public static final Item WILLOW_BOAT = new BoatItem(ModBoatType.WILLOW, new Item.Settings().maxCount(1).group(ModItemGroup.ACACIA));

	@Override
	public void onInitialize() {
		LOGGER.info("Nature's bosom flows into your cup!");

		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "alder_log"), ALDER_LOG);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "alder_wood"), ALDER_WOOD);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "stripped_alder_log"), STRIPPED_ALDER_LOG);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "stripped_alder_wood"), STRIPPED_ALDER_WOOD);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "alder_leaves"), ALDER_LEAVES);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "alder_sapling"), ALDER_SAPLING);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "potted_alder_sapling"), POTTED_ALDER_SAPLING);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "alder_planks"), ALDER_PLANKS);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "alder_slab"), ALDER_SLAB);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "alder_stairs"), ALDER_STAIRS);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "alder_fence"), ALDER_FENCE);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "alder_fence_gate"), ALDER_FENCE_GATE);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "alder_button"), ALDER_BUTTON);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "alder_pressure_plate"), ALDER_PRESSURE_PLATE);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "alder_door"), ALDER_DOOR);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "alder_trapdoor"), ALDER_TRAPDOOR);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "alder_sign"), ALDER_SIGN);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "alder_wall_sign"), ALDER_WALL_SIGN);
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "alder_log"), new BlockItem(ALDER_LOG, new Item.Settings().group(ModItemGroup.BIRCH)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "alder_wood"), new BlockItem(ALDER_WOOD, new Item.Settings().group(ModItemGroup.BIRCH)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "stripped_alder_log"), new BlockItem(STRIPPED_ALDER_LOG, new Item.Settings().group(ModItemGroup.BIRCH)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "stripped_alder_wood"), new BlockItem(STRIPPED_ALDER_WOOD, new Item.Settings().group(ModItemGroup.BIRCH)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "alder_leaves"), new BlockItem(ALDER_LEAVES, new Item.Settings().group(ModItemGroup.BIRCH)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "alder_sapling"), new BlockItem(ALDER_SAPLING, new Item.Settings().group(ModItemGroup.BIRCH)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "alder_planks"), new BlockItem(ALDER_PLANKS, new Item.Settings().group(ModItemGroup.BIRCH)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "alder_slab"), new BlockItem(ALDER_SLAB, new Item.Settings().group(ModItemGroup.BIRCH)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "alder_stairs"), new BlockItem(ALDER_STAIRS, new Item.Settings().group(ModItemGroup.BIRCH)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "alder_fence"), new BlockItem(ALDER_FENCE, new Item.Settings().group(ModItemGroup.BIRCH)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "alder_fence_gate"), new BlockItem(ALDER_FENCE_GATE, new Item.Settings().group(ModItemGroup.BIRCH)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "alder_button"), new BlockItem(ALDER_BUTTON, new Item.Settings().group(ModItemGroup.BIRCH)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "alder_pressure_plate"), new BlockItem(ALDER_PRESSURE_PLATE, new Item.Settings().group(ModItemGroup.BIRCH)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "alder_door"), new BlockItem(ALDER_DOOR, new Item.Settings().group(ModItemGroup.BIRCH)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "alder_trapdoor"), new BlockItem(ALDER_TRAPDOOR, new Item.Settings().group(ModItemGroup.BIRCH)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "alder_sign"), (Item)(new SignItem(new Item.Settings().maxCount(16).group(ModItemGroup.BIRCH), ALDER_SIGN, ALDER_WALL_SIGN)));

		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "apple_log"), APPLE_LOG);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "apple_wood"), APPLE_WOOD);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "stripped_apple_log"), STRIPPED_APPLE_LOG);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "stripped_apple_wood"), STRIPPED_APPLE_WOOD);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "apple_leaves"), APPLE_LEAVES);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "apple_sapling"), APPLE_SAPLING);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "potted_apple_sapling"), POTTED_APPLE_SAPLING);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "apple_planks"), APPLE_PLANKS);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "apple_slab"), APPLE_SLAB);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "apple_stairs"), APPLE_STAIRS);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "apple_fence"), APPLE_FENCE);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "apple_fence_gate"), APPLE_FENCE_GATE);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "apple_button"), APPLE_BUTTON);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "apple_pressure_plate"), APPLE_PRESSURE_PLATE);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "apple_door"), APPLE_DOOR);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "apple_trapdoor"), APPLE_TRAPDOOR);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "apple_sign"), APPLE_SIGN);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "apple_wall_sign"), APPLE_WALL_SIGN);
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "apple_log"), new BlockItem(APPLE_LOG, new Item.Settings().group(ModItemGroup.OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "apple_wood"), new BlockItem(APPLE_WOOD, new Item.Settings().group(ModItemGroup.OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "stripped_apple_log"), new BlockItem(STRIPPED_APPLE_LOG, new Item.Settings().group(ModItemGroup.OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "stripped_apple_wood"), new BlockItem(STRIPPED_APPLE_WOOD, new Item.Settings().group(ModItemGroup.OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "apple_leaves"), new BlockItem(APPLE_LEAVES, new Item.Settings().group(ModItemGroup.OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "apple_sapling"), new BlockItem(APPLE_SAPLING, new Item.Settings().group(ModItemGroup.OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "apple_planks"), new BlockItem(APPLE_PLANKS, new Item.Settings().group(ModItemGroup.OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "apple_slab"), new BlockItem(APPLE_SLAB, new Item.Settings().group(ModItemGroup.OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "apple_stairs"), new BlockItem(APPLE_STAIRS, new Item.Settings().group(ModItemGroup.OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "apple_fence"), new BlockItem(APPLE_FENCE, new Item.Settings().group(ModItemGroup.OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "apple_fence_gate"), new BlockItem(APPLE_FENCE_GATE, new Item.Settings().group(ModItemGroup.OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "apple_button"), new BlockItem(APPLE_BUTTON, new Item.Settings().group(ModItemGroup.OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "apple_pressure_plate"), new BlockItem(APPLE_PRESSURE_PLATE, new Item.Settings().group(ModItemGroup.OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "apple_door"), new BlockItem(APPLE_DOOR, new Item.Settings().group(ModItemGroup.OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "apple_trapdoor"), new BlockItem(APPLE_TRAPDOOR, new Item.Settings().group(ModItemGroup.OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "apple_sign"), (Item)(new SignItem(new Item.Settings().maxCount(16).group(ModItemGroup.OAK), APPLE_SIGN, APPLE_WALL_SIGN)));

		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "ash_log"), ASH_LOG);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "ash_wood"), ASH_WOOD);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "stripped_ash_log"), STRIPPED_ASH_LOG);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "stripped_ash_wood"), STRIPPED_ASH_WOOD);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "ash_leaves"), ASH_LEAVES);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "ash_sapling"), ASH_SAPLING);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "potted_ash_sapling"), POTTED_ASH_SAPLING);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "ash_planks"), ASH_PLANKS);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "ash_slab"), ASH_SLAB);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "ash_stairs"), ASH_STAIRS);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "ash_fence"), ASH_FENCE);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "ash_fence_gate"), ASH_FENCE_GATE);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "ash_button"), ASH_BUTTON);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "ash_pressure_plate"), ASH_PRESSURE_PLATE);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "ash_door"), ASH_DOOR);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "ash_trapdoor"), ASH_TRAPDOOR);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "ash_sign"), ASH_SIGN);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "ash_wall_sign"), ASH_WALL_SIGN);
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "ash_log"), new BlockItem(ASH_LOG, new Item.Settings().group(ModItemGroup.DARK_OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "ash_wood"), new BlockItem(ASH_WOOD, new Item.Settings().group(ModItemGroup.DARK_OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "stripped_ash_log"), new BlockItem(STRIPPED_ASH_LOG, new Item.Settings().group(ModItemGroup.DARK_OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "stripped_ash_wood"), new BlockItem(STRIPPED_ASH_WOOD, new Item.Settings().group(ModItemGroup.DARK_OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "ash_leaves"), new BlockItem(ASH_LEAVES, new Item.Settings().group(ModItemGroup.DARK_OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "ash_sapling"), new BlockItem(ASH_SAPLING, new Item.Settings().group(ModItemGroup.DARK_OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "ash_planks"), new BlockItem(ASH_PLANKS, new Item.Settings().group(ModItemGroup.DARK_OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "ash_slab"), new BlockItem(ASH_SLAB, new Item.Settings().group(ModItemGroup.DARK_OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "ash_stairs"), new BlockItem(ASH_STAIRS, new Item.Settings().group(ModItemGroup.DARK_OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "ash_fence"), new BlockItem(ASH_FENCE, new Item.Settings().group(ModItemGroup.DARK_OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "ash_fence_gate"), new BlockItem(ASH_FENCE_GATE, new Item.Settings().group(ModItemGroup.DARK_OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "ash_button"), new BlockItem(ASH_BUTTON, new Item.Settings().group(ModItemGroup.DARK_OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "ash_pressure_plate"), new BlockItem(ASH_PRESSURE_PLATE, new Item.Settings().group(ModItemGroup.DARK_OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "ash_door"), new BlockItem(ASH_DOOR, new Item.Settings().group(ModItemGroup.DARK_OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "ash_trapdoor"), new BlockItem(ASH_TRAPDOOR, new Item.Settings().group(ModItemGroup.DARK_OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "ash_sign"), (Item)(new SignItem(new Item.Settings().maxCount(16).group(ModItemGroup.DARK_OAK), ASH_SIGN, ASH_WALL_SIGN)));

		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "aspen_log"), ASPEN_LOG);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "aspen_wood"), ASPEN_WOOD);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "stripped_aspen_log"), STRIPPED_ASPEN_LOG);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "stripped_aspen_wood"), STRIPPED_ASPEN_WOOD);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "aspen_leaves"), ASPEN_LEAVES);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "aspen_sapling"), ASPEN_SAPLING);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "potted_aspen_sapling"), POTTED_ASPEN_SAPLING);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "aspen_planks"), ASPEN_PLANKS);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "aspen_slab"), ASPEN_SLAB);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "aspen_stairs"), ASPEN_STAIRS);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "aspen_fence"), ASPEN_FENCE);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "aspen_fence_gate"), ASPEN_FENCE_GATE);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "aspen_button"), ASPEN_BUTTON);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "aspen_pressure_plate"), ASPEN_PRESSURE_PLATE);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "aspen_door"), ASPEN_DOOR);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "aspen_trapdoor"), ASPEN_TRAPDOOR);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "aspen_sign"), ASPEN_SIGN);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "aspen_wall_sign"), ASPEN_WALL_SIGN);
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "aspen_log"), new BlockItem(ASPEN_LOG, new Item.Settings().group(ModItemGroup.SPRUCE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "aspen_wood"), new BlockItem(ASPEN_WOOD, new Item.Settings().group(ModItemGroup.SPRUCE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "stripped_aspen_log"), new BlockItem(STRIPPED_ASPEN_LOG, new Item.Settings().group(ModItemGroup.SPRUCE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "stripped_aspen_wood"), new BlockItem(STRIPPED_ASPEN_WOOD, new Item.Settings().group(ModItemGroup.SPRUCE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "aspen_leaves"), new BlockItem(ASPEN_LEAVES, new Item.Settings().group(ModItemGroup.SPRUCE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "aspen_sapling"), new BlockItem(ASPEN_SAPLING, new Item.Settings().group(ModItemGroup.SPRUCE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "aspen_planks"), new BlockItem(ASPEN_PLANKS, new Item.Settings().group(ModItemGroup.SPRUCE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "aspen_slab"), new BlockItem(ASPEN_SLAB, new Item.Settings().group(ModItemGroup.SPRUCE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "aspen_stairs"), new BlockItem(ASPEN_STAIRS, new Item.Settings().group(ModItemGroup.SPRUCE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "aspen_fence"), new BlockItem(ASPEN_FENCE, new Item.Settings().group(ModItemGroup.SPRUCE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "aspen_fence_gate"), new BlockItem(ASPEN_FENCE_GATE, new Item.Settings().group(ModItemGroup.SPRUCE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "aspen_button"), new BlockItem(ASPEN_BUTTON, new Item.Settings().group(ModItemGroup.SPRUCE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "aspen_pressure_plate"), new BlockItem(ASPEN_PRESSURE_PLATE, new Item.Settings().group(ModItemGroup.SPRUCE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "aspen_door"), new BlockItem(ASPEN_DOOR, new Item.Settings().group(ModItemGroup.SPRUCE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "aspen_trapdoor"), new BlockItem(ASPEN_TRAPDOOR, new Item.Settings().group(ModItemGroup.SPRUCE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "aspen_sign"), (Item)(new SignItem(new Item.Settings().maxCount(16).group(ModItemGroup.SPRUCE), ASPEN_SIGN, ASPEN_WALL_SIGN)));

		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "cedar_log"), CEDAR_LOG);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "cedar_wood"), CEDAR_WOOD);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "stripped_cedar_log"), STRIPPED_CEDAR_LOG);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "stripped_cedar_wood"), STRIPPED_CEDAR_WOOD);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "cedar_leaves"), CEDAR_LEAVES);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "cedar_sapling"), CEDAR_SAPLING);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "potted_cedar_sapling"), POTTED_CEDAR_SAPLING);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "cedar_planks"), CEDAR_PLANKS);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "cedar_slab"), CEDAR_SLAB);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "cedar_stairs"), CEDAR_STAIRS);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "cedar_fence"), CEDAR_FENCE);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "cedar_fence_gate"), CEDAR_FENCE_GATE);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "cedar_button"), CEDAR_BUTTON);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "cedar_pressure_plate"), CEDAR_PRESSURE_PLATE);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "cedar_door"), CEDAR_DOOR);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "cedar_trapdoor"), CEDAR_TRAPDOOR);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "cedar_sign"), CEDAR_SIGN);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "cedar_wall_sign"), CEDAR_WALL_SIGN);
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "cedar_log"), new BlockItem(CEDAR_LOG, new Item.Settings().group(ModItemGroup.DARK_OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "cedar_wood"), new BlockItem(CEDAR_WOOD, new Item.Settings().group(ModItemGroup.DARK_OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "stripped_cedar_log"), new BlockItem(STRIPPED_CEDAR_LOG, new Item.Settings().group(ModItemGroup.DARK_OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "stripped_cedar_wood"), new BlockItem(STRIPPED_CEDAR_WOOD, new Item.Settings().group(ModItemGroup.DARK_OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "cedar_leaves"), new BlockItem(CEDAR_LEAVES, new Item.Settings().group(ModItemGroup.DARK_OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "cedar_sapling"), new BlockItem(CEDAR_SAPLING, new Item.Settings().group(ModItemGroup.DARK_OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "cedar_planks"), new BlockItem(CEDAR_PLANKS, new Item.Settings().group(ModItemGroup.DARK_OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "cedar_slab"), new BlockItem(CEDAR_SLAB, new Item.Settings().group(ModItemGroup.DARK_OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "cedar_stairs"), new BlockItem(CEDAR_STAIRS, new Item.Settings().group(ModItemGroup.DARK_OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "cedar_fence"), new BlockItem(CEDAR_FENCE, new Item.Settings().group(ModItemGroup.DARK_OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "cedar_fence_gate"), new BlockItem(CEDAR_FENCE_GATE, new Item.Settings().group(ModItemGroup.DARK_OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "cedar_button"), new BlockItem(CEDAR_BUTTON, new Item.Settings().group(ModItemGroup.DARK_OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "cedar_pressure_plate"), new BlockItem(CEDAR_PRESSURE_PLATE, new Item.Settings().group(ModItemGroup.DARK_OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "cedar_door"), new BlockItem(CEDAR_DOOR, new Item.Settings().group(ModItemGroup.DARK_OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "cedar_trapdoor"), new BlockItem(CEDAR_TRAPDOOR, new Item.Settings().group(ModItemGroup.DARK_OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "cedar_sign"), (Item)(new SignItem(new Item.Settings().maxCount(16).group(ModItemGroup.DARK_OAK), CEDAR_SIGN, CEDAR_WALL_SIGN)));

		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "cherry_log"), CHERRY_LOG);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "cherry_wood"), CHERRY_WOOD);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "stripped_cherry_log"), STRIPPED_CHERRY_LOG);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "stripped_cherry_wood"), STRIPPED_CHERRY_WOOD);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "cherry_leaves"), CHERRY_LEAVES);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "cherry_sapling"), CHERRY_SAPLING);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "potted_cherry_sapling"), POTTED_CHERRY_SAPLING);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "cherry_planks"), CHERRY_PLANKS);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "cherry_slab"), CHERRY_SLAB);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "cherry_stairs"), CHERRY_STAIRS);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "cherry_fence"), CHERRY_FENCE);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "cherry_fence_gate"), CHERRY_FENCE_GATE);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "cherry_button"), CHERRY_BUTTON);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "cherry_pressure_plate"), CHERRY_PRESSURE_PLATE);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "cherry_door"), CHERRY_DOOR);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "cherry_trapdoor"), CHERRY_TRAPDOOR);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "cherry_sign"), CHERRY_SIGN);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "cherry_wall_sign"), CHERRY_WALL_SIGN);
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "cherry_log"), new BlockItem(CHERRY_LOG, new Item.Settings().group(ModItemGroup.BIRCH)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "cherry_wood"), new BlockItem(CHERRY_WOOD, new Item.Settings().group(ModItemGroup.BIRCH)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "stripped_cherry_log"), new BlockItem(STRIPPED_CHERRY_LOG, new Item.Settings().group(ModItemGroup.BIRCH)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "stripped_cherry_wood"), new BlockItem(STRIPPED_CHERRY_WOOD, new Item.Settings().group(ModItemGroup.BIRCH)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "cherry_leaves"), new BlockItem(CHERRY_LEAVES, new Item.Settings().group(ModItemGroup.BIRCH)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "cherry_sapling"), new BlockItem(CHERRY_SAPLING, new Item.Settings().group(ModItemGroup.BIRCH)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "cherry_planks"), new BlockItem(CHERRY_PLANKS, new Item.Settings().group(ModItemGroup.BIRCH)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "cherry_slab"), new BlockItem(CHERRY_SLAB, new Item.Settings().group(ModItemGroup.BIRCH)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "cherry_stairs"), new BlockItem(CHERRY_STAIRS, new Item.Settings().group(ModItemGroup.BIRCH)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "cherry_fence"), new BlockItem(CHERRY_FENCE, new Item.Settings().group(ModItemGroup.BIRCH)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "cherry_fence_gate"), new BlockItem(CHERRY_FENCE_GATE, new Item.Settings().group(ModItemGroup.BIRCH)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "cherry_button"), new BlockItem(CHERRY_BUTTON, new Item.Settings().group(ModItemGroup.BIRCH)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "cherry_pressure_plate"), new BlockItem(CHERRY_PRESSURE_PLATE, new Item.Settings().group(ModItemGroup.BIRCH)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "cherry_door"), new BlockItem(CHERRY_DOOR, new Item.Settings().group(ModItemGroup.BIRCH)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "cherry_trapdoor"), new BlockItem(CHERRY_TRAPDOOR, new Item.Settings().group(ModItemGroup.BIRCH)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "cherry_sign"), (Item)(new SignItem(new Item.Settings().maxCount(16).group(ModItemGroup.BIRCH), CHERRY_SIGN, CHERRY_WALL_SIGN)));

		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "chestnut_log"), CHESTNUT_LOG);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "chestnut_wood"), CHESTNUT_WOOD);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "stripped_chestnut_log"), STRIPPED_CHESTNUT_LOG);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "stripped_chestnut_wood"), STRIPPED_CHESTNUT_WOOD);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "chestnut_leaves"), CHESTNUT_LEAVES);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "chestnut_sapling"), CHESTNUT_SAPLING);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "potted_chestnut_sapling"), POTTED_CHESTNUT_SAPLING);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "chestnut_planks"), CHESTNUT_PLANKS);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "chestnut_slab"), CHESTNUT_SLAB);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "chestnut_stairs"), CHESTNUT_STAIRS);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "chestnut_fence"), CHESTNUT_FENCE);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "chestnut_fence_gate"), CHESTNUT_FENCE_GATE);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "chestnut_button"), CHESTNUT_BUTTON);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "chestnut_pressure_plate"), CHESTNUT_PRESSURE_PLATE);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "chestnut_door"), CHESTNUT_DOOR);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "chestnut_trapdoor"), CHESTNUT_TRAPDOOR);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "chestnut_sign"), CHESTNUT_SIGN);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "chestnut_wall_sign"), CHESTNUT_WALL_SIGN);
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "chestnut_log"), new BlockItem(CHESTNUT_LOG, new Item.Settings().group(ModItemGroup.OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "chestnut_wood"), new BlockItem(CHESTNUT_WOOD, new Item.Settings().group(ModItemGroup.OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "stripped_chestnut_log"), new BlockItem(STRIPPED_CHESTNUT_LOG, new Item.Settings().group(ModItemGroup.OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "stripped_chestnut_wood"), new BlockItem(STRIPPED_CHESTNUT_WOOD, new Item.Settings().group(ModItemGroup.OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "chestnut_leaves"), new BlockItem(CHESTNUT_LEAVES, new Item.Settings().group(ModItemGroup.OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "chestnut_sapling"), new BlockItem(CHESTNUT_SAPLING, new Item.Settings().group(ModItemGroup.OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "chestnut_planks"), new BlockItem(CHESTNUT_PLANKS, new Item.Settings().group(ModItemGroup.OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "chestnut_slab"), new BlockItem(CHESTNUT_SLAB, new Item.Settings().group(ModItemGroup.OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "chestnut_stairs"), new BlockItem(CHESTNUT_STAIRS, new Item.Settings().group(ModItemGroup.OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "chestnut_fence"), new BlockItem(CHESTNUT_FENCE, new Item.Settings().group(ModItemGroup.OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "chestnut_fence_gate"), new BlockItem(CHESTNUT_FENCE_GATE, new Item.Settings().group(ModItemGroup.OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "chestnut_button"), new BlockItem(CHESTNUT_BUTTON, new Item.Settings().group(ModItemGroup.OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "chestnut_pressure_plate"), new BlockItem(CHESTNUT_PRESSURE_PLATE, new Item.Settings().group(ModItemGroup.OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "chestnut_door"), new BlockItem(CHESTNUT_DOOR, new Item.Settings().group(ModItemGroup.OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "chestnut_trapdoor"), new BlockItem(CHESTNUT_TRAPDOOR, new Item.Settings().group(ModItemGroup.OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "chestnut_sign"), (Item)(new SignItem(new Item.Settings().maxCount(16).group(ModItemGroup.OAK), CHESTNUT_SIGN, CHESTNUT_WALL_SIGN)));

		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "citrus_log"), CITRUS_LOG);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "citrus_wood"), CITRUS_WOOD);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "stripped_citrus_log"), STRIPPED_CITRUS_LOG);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "stripped_citrus_wood"), STRIPPED_CITRUS_WOOD);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "citrus_leaves"), CITRUS_LEAVES);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "citrus_sapling"), CITRUS_SAPLING);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "potted_citrus_sapling"), POTTED_CITRUS_SAPLING);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "citrus_planks"), CITRUS_PLANKS);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "citrus_slab"), CITRUS_SLAB);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "citrus_stairs"), CITRUS_STAIRS);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "citrus_fence"), CITRUS_FENCE);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "citrus_fence_gate"), CITRUS_FENCE_GATE);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "citrus_button"), CITRUS_BUTTON);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "citrus_pressure_plate"), CITRUS_PRESSURE_PLATE);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "citrus_door"), CITRUS_DOOR);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "citrus_trapdoor"), CITRUS_TRAPDOOR);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "citrus_sign"), CITRUS_SIGN);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "citrus_wall_sign"), CITRUS_WALL_SIGN);
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "citrus_log"), new BlockItem(CITRUS_LOG, new Item.Settings().group(ModItemGroup.JUNGLE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "citrus_wood"), new BlockItem(CITRUS_WOOD, new Item.Settings().group(ModItemGroup.JUNGLE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "stripped_citrus_log"), new BlockItem(STRIPPED_CITRUS_LOG, new Item.Settings().group(ModItemGroup.JUNGLE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "stripped_citrus_wood"), new BlockItem(STRIPPED_CITRUS_WOOD, new Item.Settings().group(ModItemGroup.JUNGLE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "citrus_leaves"), new BlockItem(CITRUS_LEAVES, new Item.Settings().group(ModItemGroup.JUNGLE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "citrus_sapling"), new BlockItem(CITRUS_SAPLING, new Item.Settings().group(ModItemGroup.JUNGLE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "citrus_planks"), new BlockItem(CITRUS_PLANKS, new Item.Settings().group(ModItemGroup.JUNGLE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "citrus_slab"), new BlockItem(CITRUS_SLAB, new Item.Settings().group(ModItemGroup.JUNGLE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "citrus_stairs"), new BlockItem(CITRUS_STAIRS, new Item.Settings().group(ModItemGroup.JUNGLE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "citrus_fence"), new BlockItem(CITRUS_FENCE, new Item.Settings().group(ModItemGroup.JUNGLE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "citrus_fence_gate"), new BlockItem(CITRUS_FENCE_GATE, new Item.Settings().group(ModItemGroup.JUNGLE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "citrus_button"), new BlockItem(CITRUS_BUTTON, new Item.Settings().group(ModItemGroup.JUNGLE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "citrus_pressure_plate"), new BlockItem(CITRUS_PRESSURE_PLATE, new Item.Settings().group(ModItemGroup.JUNGLE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "citrus_door"), new BlockItem(CITRUS_DOOR, new Item.Settings().group(ModItemGroup.JUNGLE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "citrus_trapdoor"), new BlockItem(CITRUS_TRAPDOOR, new Item.Settings().group(ModItemGroup.JUNGLE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "citrus_sign"), (Item)(new SignItem(new Item.Settings().maxCount(16).group(ModItemGroup.JUNGLE), CITRUS_SIGN, CITRUS_WALL_SIGN)));

		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "cottonwood_log"), COTTONWOOD_LOG);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "cottonwood_wood"), COTTONWOOD_WOOD);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "stripped_cottonwood_log"), STRIPPED_COTTONWOOD_LOG);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "stripped_cottonwood_wood"), STRIPPED_COTTONWOOD_WOOD);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "cottonwood_leaves"), COTTONWOOD_LEAVES);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "cottonwood_sapling"), COTTONWOOD_SAPLING);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "potted_cottonwood_sapling"), POTTED_COTTONWOOD_SAPLING);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "cottonwood_planks"), COTTONWOOD_PLANKS);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "cottonwood_slab"), COTTONWOOD_SLAB);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "cottonwood_stairs"), COTTONWOOD_STAIRS);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "cottonwood_fence"), COTTONWOOD_FENCE);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "cottonwood_fence_gate"), COTTONWOOD_FENCE_GATE);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "cottonwood_button"), COTTONWOOD_BUTTON);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "cottonwood_pressure_plate"), COTTONWOOD_PRESSURE_PLATE);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "cottonwood_door"), COTTONWOOD_DOOR);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "cottonwood_trapdoor"), COTTONWOOD_TRAPDOOR);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "cottonwood_sign"), COTTONWOOD_SIGN);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "cottonwood_wall_sign"), COTTONWOOD_WALL_SIGN);
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "cottonwood_log"), new BlockItem(COTTONWOOD_LOG, new Item.Settings().group(ModItemGroup.BIRCH)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "cottonwood_wood"), new BlockItem(COTTONWOOD_WOOD, new Item.Settings().group(ModItemGroup.BIRCH)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "stripped_cottonwood_log"), new BlockItem(STRIPPED_COTTONWOOD_LOG, new Item.Settings().group(ModItemGroup.BIRCH)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "stripped_cottonwood_wood"), new BlockItem(STRIPPED_COTTONWOOD_WOOD, new Item.Settings().group(ModItemGroup.BIRCH)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "cottonwood_leaves"), new BlockItem(COTTONWOOD_LEAVES, new Item.Settings().group(ModItemGroup.BIRCH)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "cottonwood_sapling"), new BlockItem(COTTONWOOD_SAPLING, new Item.Settings().group(ModItemGroup.BIRCH)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "cottonwood_planks"), new BlockItem(COTTONWOOD_PLANKS, new Item.Settings().group(ModItemGroup.BIRCH)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "cottonwood_slab"), new BlockItem(COTTONWOOD_SLAB, new Item.Settings().group(ModItemGroup.BIRCH)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "cottonwood_stairs"), new BlockItem(COTTONWOOD_STAIRS, new Item.Settings().group(ModItemGroup.BIRCH)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "cottonwood_fence"), new BlockItem(COTTONWOOD_FENCE, new Item.Settings().group(ModItemGroup.BIRCH)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "cottonwood_fence_gate"), new BlockItem(COTTONWOOD_FENCE_GATE, new Item.Settings().group(ModItemGroup.BIRCH)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "cottonwood_button"), new BlockItem(COTTONWOOD_BUTTON, new Item.Settings().group(ModItemGroup.BIRCH)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "cottonwood_pressure_plate"), new BlockItem(COTTONWOOD_PRESSURE_PLATE, new Item.Settings().group(ModItemGroup.BIRCH)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "cottonwood_door"), new BlockItem(COTTONWOOD_DOOR, new Item.Settings().group(ModItemGroup.BIRCH)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "cottonwood_trapdoor"), new BlockItem(COTTONWOOD_TRAPDOOR, new Item.Settings().group(ModItemGroup.BIRCH)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "cottonwood_sign"), (Item)(new SignItem(new Item.Settings().maxCount(16).group(ModItemGroup.BIRCH), COTTONWOOD_SIGN, COTTONWOOD_WALL_SIGN)));

		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "cypress_log"), CYPRESS_LOG);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "cypress_wood"), CYPRESS_WOOD);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "stripped_cypress_log"), STRIPPED_CYPRESS_LOG);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "stripped_cypress_wood"), STRIPPED_CYPRESS_WOOD);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "cypress_leaves"), CYPRESS_LEAVES);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "cypress_sapling"), CYPRESS_SAPLING);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "potted_cypress_sapling"), POTTED_CYPRESS_SAPLING);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "cypress_planks"), CYPRESS_PLANKS);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "cypress_slab"), CYPRESS_SLAB);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "cypress_stairs"), CYPRESS_STAIRS);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "cypress_fence"), CYPRESS_FENCE);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "cypress_fence_gate"), CYPRESS_FENCE_GATE);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "cypress_button"), CYPRESS_BUTTON);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "cypress_pressure_plate"), CYPRESS_PRESSURE_PLATE);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "cypress_door"), CYPRESS_DOOR);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "cypress_trapdoor"), CYPRESS_TRAPDOOR);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "cypress_sign"), CYPRESS_SIGN);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "cypress_wall_sign"), CYPRESS_WALL_SIGN);
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "cypress_log"), new BlockItem(CYPRESS_LOG, new Item.Settings().group(ModItemGroup.ACACIA)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "cypress_wood"), new BlockItem(CYPRESS_WOOD, new Item.Settings().group(ModItemGroup.ACACIA)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "stripped_cypress_log"), new BlockItem(STRIPPED_CYPRESS_LOG, new Item.Settings().group(ModItemGroup.ACACIA)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "stripped_cypress_wood"), new BlockItem(STRIPPED_CYPRESS_WOOD, new Item.Settings().group(ModItemGroup.ACACIA)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "cypress_leaves"), new BlockItem(CYPRESS_LEAVES, new Item.Settings().group(ModItemGroup.ACACIA)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "cypress_sapling"), new BlockItem(CYPRESS_SAPLING, new Item.Settings().group(ModItemGroup.ACACIA)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "cypress_planks"), new BlockItem(CYPRESS_PLANKS, new Item.Settings().group(ModItemGroup.ACACIA)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "cypress_slab"), new BlockItem(CYPRESS_SLAB, new Item.Settings().group(ModItemGroup.ACACIA)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "cypress_stairs"), new BlockItem(CYPRESS_STAIRS, new Item.Settings().group(ModItemGroup.ACACIA)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "cypress_fence"), new BlockItem(CYPRESS_FENCE, new Item.Settings().group(ModItemGroup.ACACIA)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "cypress_fence_gate"), new BlockItem(CYPRESS_FENCE_GATE, new Item.Settings().group(ModItemGroup.ACACIA)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "cypress_button"), new BlockItem(CYPRESS_BUTTON, new Item.Settings().group(ModItemGroup.ACACIA)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "cypress_pressure_plate"), new BlockItem(CYPRESS_PRESSURE_PLATE, new Item.Settings().group(ModItemGroup.ACACIA)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "cypress_door"), new BlockItem(CYPRESS_DOOR, new Item.Settings().group(ModItemGroup.ACACIA)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "cypress_trapdoor"), new BlockItem(CYPRESS_TRAPDOOR, new Item.Settings().group(ModItemGroup.ACACIA)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "cypress_sign"), (Item)(new SignItem(new Item.Settings().maxCount(16).group(ModItemGroup.ACACIA), CYPRESS_SIGN, CYPRESS_WALL_SIGN)));

		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "ebony_log"), EBONY_LOG);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "ebony_wood"), EBONY_WOOD);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "stripped_ebony_log"), STRIPPED_EBONY_LOG);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "stripped_ebony_wood"), STRIPPED_EBONY_WOOD);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "ebony_leaves"), EBONY_LEAVES);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "ebony_sapling"), EBONY_SAPLING);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "potted_ebony_sapling"), POTTED_EBONY_SAPLING);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "ebony_planks"), EBONY_PLANKS);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "ebony_slab"), EBONY_SLAB);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "ebony_stairs"), EBONY_STAIRS);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "ebony_fence"), EBONY_FENCE);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "ebony_fence_gate"), EBONY_FENCE_GATE);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "ebony_button"), EBONY_BUTTON);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "ebony_pressure_plate"), EBONY_PRESSURE_PLATE);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "ebony_door"), EBONY_DOOR);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "ebony_trapdoor"), EBONY_TRAPDOOR);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "ebony_sign"), EBONY_SIGN);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "ebony_wall_sign"), EBONY_WALL_SIGN);
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "ebony_log"), new BlockItem(EBONY_LOG, new Item.Settings().group(ModItemGroup.JUNGLE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "ebony_wood"), new BlockItem(EBONY_WOOD, new Item.Settings().group(ModItemGroup.JUNGLE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "stripped_ebony_log"), new BlockItem(STRIPPED_EBONY_LOG, new Item.Settings().group(ModItemGroup.JUNGLE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "stripped_ebony_wood"), new BlockItem(STRIPPED_EBONY_WOOD, new Item.Settings().group(ModItemGroup.JUNGLE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "ebony_leaves"), new BlockItem(EBONY_LEAVES, new Item.Settings().group(ModItemGroup.JUNGLE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "ebony_sapling"), new BlockItem(EBONY_SAPLING, new Item.Settings().group(ModItemGroup.JUNGLE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "ebony_planks"), new BlockItem(EBONY_PLANKS, new Item.Settings().group(ModItemGroup.JUNGLE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "ebony_slab"), new BlockItem(EBONY_SLAB, new Item.Settings().group(ModItemGroup.JUNGLE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "ebony_stairs"), new BlockItem(EBONY_STAIRS, new Item.Settings().group(ModItemGroup.JUNGLE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "ebony_fence"), new BlockItem(EBONY_FENCE, new Item.Settings().group(ModItemGroup.JUNGLE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "ebony_fence_gate"), new BlockItem(EBONY_FENCE_GATE, new Item.Settings().group(ModItemGroup.JUNGLE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "ebony_button"), new BlockItem(EBONY_BUTTON, new Item.Settings().group(ModItemGroup.JUNGLE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "ebony_pressure_plate"), new BlockItem(EBONY_PRESSURE_PLATE, new Item.Settings().group(ModItemGroup.JUNGLE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "ebony_door"), new BlockItem(EBONY_DOOR, new Item.Settings().group(ModItemGroup.JUNGLE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "ebony_trapdoor"), new BlockItem(EBONY_TRAPDOOR, new Item.Settings().group(ModItemGroup.JUNGLE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "ebony_sign"), (Item)(new SignItem(new Item.Settings().maxCount(16).group(ModItemGroup.JUNGLE), EBONY_SIGN, EBONY_WALL_SIGN)));

		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "fir_log"), FIR_LOG);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "fir_wood"), FIR_WOOD);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "stripped_fir_log"), STRIPPED_FIR_LOG);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "stripped_fir_wood"), STRIPPED_FIR_WOOD);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "fir_leaves"), FIR_LEAVES);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "fir_sapling"), FIR_SAPLING);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "potted_fir_sapling"), POTTED_FIR_SAPLING);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "fir_planks"), FIR_PLANKS);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "fir_slab"), FIR_SLAB);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "fir_stairs"), FIR_STAIRS);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "fir_fence"), FIR_FENCE);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "fir_fence_gate"), FIR_FENCE_GATE);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "fir_button"), FIR_BUTTON);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "fir_pressure_plate"), FIR_PRESSURE_PLATE);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "fir_door"), FIR_DOOR);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "fir_trapdoor"), FIR_TRAPDOOR);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "fir_sign"), FIR_SIGN);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "fir_wall_sign"), FIR_WALL_SIGN);
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "fir_log"), new BlockItem(FIR_LOG, new Item.Settings().group(ModItemGroup.SPRUCE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "fir_wood"), new BlockItem(FIR_WOOD, new Item.Settings().group(ModItemGroup.SPRUCE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "stripped_fir_log"), new BlockItem(STRIPPED_FIR_LOG, new Item.Settings().group(ModItemGroup.SPRUCE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "stripped_fir_wood"), new BlockItem(STRIPPED_FIR_WOOD, new Item.Settings().group(ModItemGroup.SPRUCE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "fir_leaves"), new BlockItem(FIR_LEAVES, new Item.Settings().group(ModItemGroup.SPRUCE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "fir_sapling"), new BlockItem(FIR_SAPLING, new Item.Settings().group(ModItemGroup.SPRUCE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "fir_planks"), new BlockItem(FIR_PLANKS, new Item.Settings().group(ModItemGroup.SPRUCE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "fir_slab"), new BlockItem(FIR_SLAB, new Item.Settings().group(ModItemGroup.SPRUCE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "fir_stairs"), new BlockItem(FIR_STAIRS, new Item.Settings().group(ModItemGroup.SPRUCE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "fir_fence"), new BlockItem(FIR_FENCE, new Item.Settings().group(ModItemGroup.SPRUCE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "fir_fence_gate"), new BlockItem(FIR_FENCE_GATE, new Item.Settings().group(ModItemGroup.SPRUCE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "fir_button"), new BlockItem(FIR_BUTTON, new Item.Settings().group(ModItemGroup.SPRUCE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "fir_pressure_plate"), new BlockItem(FIR_PRESSURE_PLATE, new Item.Settings().group(ModItemGroup.SPRUCE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "fir_door"), new BlockItem(FIR_DOOR, new Item.Settings().group(ModItemGroup.SPRUCE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "fir_trapdoor"), new BlockItem(FIR_TRAPDOOR, new Item.Settings().group(ModItemGroup.SPRUCE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "fir_sign"), (Item)(new SignItem(new Item.Settings().maxCount(16).group(ModItemGroup.SPRUCE), FIR_SIGN, FIR_WALL_SIGN)));

		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "gum_log"), GUM_LOG);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "gum_wood"), GUM_WOOD);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "stripped_gum_log"), STRIPPED_GUM_LOG);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "stripped_gum_wood"), STRIPPED_GUM_WOOD);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "gum_leaves"), GUM_LEAVES);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "gum_sapling"), GUM_SAPLING);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "potted_gum_sapling"), POTTED_GUM_SAPLING);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "gum_planks"), GUM_PLANKS);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "gum_slab"), GUM_SLAB);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "gum_stairs"), GUM_STAIRS);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "gum_fence"), GUM_FENCE);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "gum_fence_gate"), GUM_FENCE_GATE);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "gum_button"), GUM_BUTTON);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "gum_pressure_plate"), GUM_PRESSURE_PLATE);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "gum_door"), GUM_DOOR);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "gum_trapdoor"), GUM_TRAPDOOR);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "gum_sign"), GUM_SIGN);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "gum_wall_sign"), GUM_WALL_SIGN);
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "gum_log"), new BlockItem(GUM_LOG, new Item.Settings().group(ModItemGroup.ACACIA)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "gum_wood"), new BlockItem(GUM_WOOD, new Item.Settings().group(ModItemGroup.ACACIA)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "stripped_gum_log"), new BlockItem(STRIPPED_GUM_LOG, new Item.Settings().group(ModItemGroup.ACACIA)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "stripped_gum_wood"), new BlockItem(STRIPPED_GUM_WOOD, new Item.Settings().group(ModItemGroup.ACACIA)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "gum_leaves"), new BlockItem(GUM_LEAVES, new Item.Settings().group(ModItemGroup.ACACIA)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "gum_sapling"), new BlockItem(GUM_SAPLING, new Item.Settings().group(ModItemGroup.ACACIA)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "gum_planks"), new BlockItem(GUM_PLANKS, new Item.Settings().group(ModItemGroup.ACACIA)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "gum_slab"), new BlockItem(GUM_SLAB, new Item.Settings().group(ModItemGroup.ACACIA)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "gum_stairs"), new BlockItem(GUM_STAIRS, new Item.Settings().group(ModItemGroup.ACACIA)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "gum_fence"), new BlockItem(GUM_FENCE, new Item.Settings().group(ModItemGroup.ACACIA)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "gum_fence_gate"), new BlockItem(GUM_FENCE_GATE, new Item.Settings().group(ModItemGroup.ACACIA)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "gum_button"), new BlockItem(GUM_BUTTON, new Item.Settings().group(ModItemGroup.ACACIA)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "gum_pressure_plate"), new BlockItem(GUM_PRESSURE_PLATE, new Item.Settings().group(ModItemGroup.ACACIA)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "gum_door"), new BlockItem(GUM_DOOR, new Item.Settings().group(ModItemGroup.ACACIA)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "gum_trapdoor"), new BlockItem(GUM_TRAPDOOR, new Item.Settings().group(ModItemGroup.ACACIA)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "gum_sign"), (Item)(new SignItem(new Item.Settings().maxCount(16).group(ModItemGroup.ACACIA), GUM_SIGN, GUM_WALL_SIGN)));

		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "hawthorn_log"), HAWTHORN_LOG);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "hawthorn_wood"), HAWTHORN_WOOD);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "stripped_hawthorn_log"), STRIPPED_HAWTHORN_LOG);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "stripped_hawthorn_wood"), STRIPPED_HAWTHORN_WOOD);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "hawthorn_leaves"), HAWTHORN_LEAVES);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "hawthorn_sapling"), HAWTHORN_SAPLING);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "potted_hawthorn_sapling"), POTTED_HAWTHORN_SAPLING);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "hawthorn_planks"), HAWTHORN_PLANKS);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "hawthorn_slab"), HAWTHORN_SLAB);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "hawthorn_stairs"), HAWTHORN_STAIRS);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "hawthorn_fence"), HAWTHORN_FENCE);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "hawthorn_fence_gate"), HAWTHORN_FENCE_GATE);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "hawthorn_button"), HAWTHORN_BUTTON);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "hawthorn_pressure_plate"), HAWTHORN_PRESSURE_PLATE);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "hawthorn_door"), HAWTHORN_DOOR);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "hawthorn_trapdoor"), HAWTHORN_TRAPDOOR);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "hawthorn_sign"), HAWTHORN_SIGN);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "hawthorn_wall_sign"), HAWTHORN_WALL_SIGN);
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "hawthorn_log"), new BlockItem(HAWTHORN_LOG, new Item.Settings().group(ModItemGroup.BIRCH)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "hawthorn_wood"), new BlockItem(HAWTHORN_WOOD, new Item.Settings().group(ModItemGroup.BIRCH)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "stripped_hawthorn_log"), new BlockItem(STRIPPED_HAWTHORN_LOG, new Item.Settings().group(ModItemGroup.BIRCH)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "stripped_hawthorn_wood"), new BlockItem(STRIPPED_HAWTHORN_WOOD, new Item.Settings().group(ModItemGroup.BIRCH)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "hawthorn_leaves"), new BlockItem(HAWTHORN_LEAVES, new Item.Settings().group(ModItemGroup.BIRCH)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "hawthorn_sapling"), new BlockItem(HAWTHORN_SAPLING, new Item.Settings().group(ModItemGroup.BIRCH)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "hawthorn_planks"), new BlockItem(HAWTHORN_PLANKS, new Item.Settings().group(ModItemGroup.BIRCH)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "hawthorn_slab"), new BlockItem(HAWTHORN_SLAB, new Item.Settings().group(ModItemGroup.BIRCH)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "hawthorn_stairs"), new BlockItem(HAWTHORN_STAIRS, new Item.Settings().group(ModItemGroup.BIRCH)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "hawthorn_fence"), new BlockItem(HAWTHORN_FENCE, new Item.Settings().group(ModItemGroup.BIRCH)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "hawthorn_fence_gate"), new BlockItem(HAWTHORN_FENCE_GATE, new Item.Settings().group(ModItemGroup.BIRCH)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "hawthorn_button"), new BlockItem(HAWTHORN_BUTTON, new Item.Settings().group(ModItemGroup.BIRCH)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "hawthorn_pressure_plate"), new BlockItem(HAWTHORN_PRESSURE_PLATE, new Item.Settings().group(ModItemGroup.BIRCH)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "hawthorn_door"), new BlockItem(HAWTHORN_DOOR, new Item.Settings().group(ModItemGroup.BIRCH)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "hawthorn_trapdoor"), new BlockItem(HAWTHORN_TRAPDOOR, new Item.Settings().group(ModItemGroup.BIRCH)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "hawthorn_sign"), (Item)(new SignItem(new Item.Settings().maxCount(16).group(ModItemGroup.BIRCH), HAWTHORN_SIGN, HAWTHORN_WALL_SIGN)));

		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "hazel_log"), HAZEL_LOG);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "hazel_wood"), HAZEL_WOOD);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "stripped_hazel_log"), STRIPPED_HAZEL_LOG);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "stripped_hazel_wood"), STRIPPED_HAZEL_WOOD);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "hazel_leaves"), HAZEL_LEAVES);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "hazel_sapling"), HAZEL_SAPLING);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "potted_hazel_sapling"), POTTED_HAZEL_SAPLING);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "hazel_planks"), HAZEL_PLANKS);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "hazel_slab"), HAZEL_SLAB);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "hazel_stairs"), HAZEL_STAIRS);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "hazel_fence"), HAZEL_FENCE);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "hazel_fence_gate"), HAZEL_FENCE_GATE);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "hazel_button"), HAZEL_BUTTON);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "hazel_pressure_plate"), HAZEL_PRESSURE_PLATE);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "hazel_door"), HAZEL_DOOR);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "hazel_trapdoor"), HAZEL_TRAPDOOR);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "hazel_sign"), HAZEL_SIGN);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "hazel_wall_sign"), HAZEL_WALL_SIGN);
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "hazel_log"), new BlockItem(HAZEL_LOG, new Item.Settings().group(ModItemGroup.OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "hazel_wood"), new BlockItem(HAZEL_WOOD, new Item.Settings().group(ModItemGroup.OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "stripped_hazel_log"), new BlockItem(STRIPPED_HAZEL_LOG, new Item.Settings().group(ModItemGroup.OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "stripped_hazel_wood"), new BlockItem(STRIPPED_HAZEL_WOOD, new Item.Settings().group(ModItemGroup.OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "hazel_leaves"), new BlockItem(HAZEL_LEAVES, new Item.Settings().group(ModItemGroup.OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "hazel_sapling"), new BlockItem(HAZEL_SAPLING, new Item.Settings().group(ModItemGroup.OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "hazel_planks"), new BlockItem(HAZEL_PLANKS, new Item.Settings().group(ModItemGroup.OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "hazel_slab"), new BlockItem(HAZEL_SLAB, new Item.Settings().group(ModItemGroup.OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "hazel_stairs"), new BlockItem(HAZEL_STAIRS, new Item.Settings().group(ModItemGroup.OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "hazel_fence"), new BlockItem(HAZEL_FENCE, new Item.Settings().group(ModItemGroup.OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "hazel_fence_gate"), new BlockItem(HAZEL_FENCE_GATE, new Item.Settings().group(ModItemGroup.OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "hazel_button"), new BlockItem(HAZEL_BUTTON, new Item.Settings().group(ModItemGroup.OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "hazel_pressure_plate"), new BlockItem(HAZEL_PRESSURE_PLATE, new Item.Settings().group(ModItemGroup.OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "hazel_door"), new BlockItem(HAZEL_DOOR, new Item.Settings().group(ModItemGroup.OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "hazel_trapdoor"), new BlockItem(HAZEL_TRAPDOOR, new Item.Settings().group(ModItemGroup.OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "hazel_sign"), (Item)(new SignItem(new Item.Settings().maxCount(16).group(ModItemGroup.OAK), HAZEL_SIGN, HAZEL_WALL_SIGN)));

		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "hemlock_log"), HEMLOCK_LOG);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "hemlock_wood"), HEMLOCK_WOOD);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "stripped_hemlock_log"), STRIPPED_HEMLOCK_LOG);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "stripped_hemlock_wood"), STRIPPED_HEMLOCK_WOOD);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "hemlock_leaves"), HEMLOCK_LEAVES);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "hemlock_sapling"), HEMLOCK_SAPLING);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "potted_hemlock_sapling"), POTTED_HEMLOCK_SAPLING);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "hemlock_planks"), HEMLOCK_PLANKS);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "hemlock_slab"), HEMLOCK_SLAB);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "hemlock_stairs"), HEMLOCK_STAIRS);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "hemlock_fence"), HEMLOCK_FENCE);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "hemlock_fence_gate"), HEMLOCK_FENCE_GATE);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "hemlock_button"), HEMLOCK_BUTTON);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "hemlock_pressure_plate"), HEMLOCK_PRESSURE_PLATE);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "hemlock_door"), HEMLOCK_DOOR);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "hemlock_trapdoor"), HEMLOCK_TRAPDOOR);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "hemlock_sign"), HEMLOCK_SIGN);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "hemlock_wall_sign"), HEMLOCK_WALL_SIGN);
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "hemlock_log"), new BlockItem(HEMLOCK_LOG, new Item.Settings().group(ModItemGroup.SPRUCE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "hemlock_wood"), new BlockItem(HEMLOCK_WOOD, new Item.Settings().group(ModItemGroup.SPRUCE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "stripped_hemlock_log"), new BlockItem(STRIPPED_HEMLOCK_LOG, new Item.Settings().group(ModItemGroup.SPRUCE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "stripped_hemlock_wood"), new BlockItem(STRIPPED_HEMLOCK_WOOD, new Item.Settings().group(ModItemGroup.SPRUCE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "hemlock_leaves"), new BlockItem(HEMLOCK_LEAVES, new Item.Settings().group(ModItemGroup.SPRUCE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "hemlock_sapling"), new BlockItem(HEMLOCK_SAPLING, new Item.Settings().group(ModItemGroup.SPRUCE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "hemlock_planks"), new BlockItem(HEMLOCK_PLANKS, new Item.Settings().group(ModItemGroup.SPRUCE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "hemlock_slab"), new BlockItem(HEMLOCK_SLAB, new Item.Settings().group(ModItemGroup.SPRUCE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "hemlock_stairs"), new BlockItem(HEMLOCK_STAIRS, new Item.Settings().group(ModItemGroup.SPRUCE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "hemlock_fence"), new BlockItem(HEMLOCK_FENCE, new Item.Settings().group(ModItemGroup.SPRUCE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "hemlock_fence_gate"), new BlockItem(HEMLOCK_FENCE_GATE, new Item.Settings().group(ModItemGroup.SPRUCE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "hemlock_button"), new BlockItem(HEMLOCK_BUTTON, new Item.Settings().group(ModItemGroup.SPRUCE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "hemlock_pressure_plate"), new BlockItem(HEMLOCK_PRESSURE_PLATE, new Item.Settings().group(ModItemGroup.SPRUCE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "hemlock_door"), new BlockItem(HEMLOCK_DOOR, new Item.Settings().group(ModItemGroup.SPRUCE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "hemlock_trapdoor"), new BlockItem(HEMLOCK_TRAPDOOR, new Item.Settings().group(ModItemGroup.SPRUCE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "hemlock_sign"), (Item)(new SignItem(new Item.Settings().maxCount(16).group(ModItemGroup.SPRUCE), HEMLOCK_SIGN, HEMLOCK_WALL_SIGN)));

		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "hickory_log"), HICKORY_LOG);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "hickory_wood"), HICKORY_WOOD);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "stripped_hickory_log"), STRIPPED_HICKORY_LOG);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "stripped_hickory_wood"), STRIPPED_HICKORY_WOOD);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "hickory_leaves"), HICKORY_LEAVES);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "hickory_sapling"), HICKORY_SAPLING);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "potted_hickory_sapling"), POTTED_HICKORY_SAPLING);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "hickory_planks"), HICKORY_PLANKS);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "hickory_slab"), HICKORY_SLAB);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "hickory_stairs"), HICKORY_STAIRS);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "hickory_fence"), HICKORY_FENCE);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "hickory_fence_gate"), HICKORY_FENCE_GATE);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "hickory_button"), HICKORY_BUTTON);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "hickory_pressure_plate"), HICKORY_PRESSURE_PLATE);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "hickory_door"), HICKORY_DOOR);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "hickory_trapdoor"), HICKORY_TRAPDOOR);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "hickory_sign"), HICKORY_SIGN);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "hickory_wall_sign"), HICKORY_WALL_SIGN);
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "hickory_log"), new BlockItem(HICKORY_LOG, new Item.Settings().group(ModItemGroup.DARK_OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "hickory_wood"), new BlockItem(HICKORY_WOOD, new Item.Settings().group(ModItemGroup.DARK_OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "stripped_hickory_log"), new BlockItem(STRIPPED_HICKORY_LOG, new Item.Settings().group(ModItemGroup.DARK_OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "stripped_hickory_wood"), new BlockItem(STRIPPED_HICKORY_WOOD, new Item.Settings().group(ModItemGroup.DARK_OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "hickory_leaves"), new BlockItem(HICKORY_LEAVES, new Item.Settings().group(ModItemGroup.DARK_OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "hickory_sapling"), new BlockItem(HICKORY_SAPLING, new Item.Settings().group(ModItemGroup.DARK_OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "hickory_planks"), new BlockItem(HICKORY_PLANKS, new Item.Settings().group(ModItemGroup.DARK_OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "hickory_slab"), new BlockItem(HICKORY_SLAB, new Item.Settings().group(ModItemGroup.DARK_OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "hickory_stairs"), new BlockItem(HICKORY_STAIRS, new Item.Settings().group(ModItemGroup.DARK_OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "hickory_fence"), new BlockItem(HICKORY_FENCE, new Item.Settings().group(ModItemGroup.DARK_OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "hickory_fence_gate"), new BlockItem(HICKORY_FENCE_GATE, new Item.Settings().group(ModItemGroup.DARK_OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "hickory_button"), new BlockItem(HICKORY_BUTTON, new Item.Settings().group(ModItemGroup.DARK_OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "hickory_pressure_plate"), new BlockItem(HICKORY_PRESSURE_PLATE, new Item.Settings().group(ModItemGroup.DARK_OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "hickory_door"), new BlockItem(HICKORY_DOOR, new Item.Settings().group(ModItemGroup.DARK_OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "hickory_trapdoor"), new BlockItem(HICKORY_TRAPDOOR, new Item.Settings().group(ModItemGroup.DARK_OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "hickory_sign"), (Item)(new SignItem(new Item.Settings().maxCount(16).group(ModItemGroup.DARK_OAK), HICKORY_SIGN, HICKORY_WALL_SIGN)));

		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "juniper_log"), JUNIPER_LOG);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "juniper_wood"), JUNIPER_WOOD);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "stripped_juniper_log"), STRIPPED_JUNIPER_LOG);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "stripped_juniper_wood"), STRIPPED_JUNIPER_WOOD);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "juniper_leaves"), JUNIPER_LEAVES);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "juniper_sapling"), JUNIPER_SAPLING);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "potted_juniper_sapling"), POTTED_JUNIPER_SAPLING);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "juniper_planks"), JUNIPER_PLANKS);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "juniper_slab"), JUNIPER_SLAB);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "juniper_stairs"), JUNIPER_STAIRS);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "juniper_fence"), JUNIPER_FENCE);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "juniper_fence_gate"), JUNIPER_FENCE_GATE);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "juniper_button"), JUNIPER_BUTTON);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "juniper_pressure_plate"), JUNIPER_PRESSURE_PLATE);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "juniper_door"), JUNIPER_DOOR);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "juniper_trapdoor"), JUNIPER_TRAPDOOR);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "juniper_sign"), JUNIPER_SIGN);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "juniper_wall_sign"), JUNIPER_WALL_SIGN);
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "juniper_log"), new BlockItem(JUNIPER_LOG, new Item.Settings().group(ModItemGroup.ACACIA)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "juniper_wood"), new BlockItem(JUNIPER_WOOD, new Item.Settings().group(ModItemGroup.ACACIA)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "stripped_juniper_log"), new BlockItem(STRIPPED_JUNIPER_LOG, new Item.Settings().group(ModItemGroup.ACACIA)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "stripped_juniper_wood"), new BlockItem(STRIPPED_JUNIPER_WOOD, new Item.Settings().group(ModItemGroup.ACACIA)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "juniper_leaves"), new BlockItem(JUNIPER_LEAVES, new Item.Settings().group(ModItemGroup.ACACIA)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "juniper_sapling"), new BlockItem(JUNIPER_SAPLING, new Item.Settings().group(ModItemGroup.ACACIA)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "juniper_planks"), new BlockItem(JUNIPER_PLANKS, new Item.Settings().group(ModItemGroup.ACACIA)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "juniper_slab"), new BlockItem(JUNIPER_SLAB, new Item.Settings().group(ModItemGroup.ACACIA)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "juniper_stairs"), new BlockItem(JUNIPER_STAIRS, new Item.Settings().group(ModItemGroup.ACACIA)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "juniper_fence"), new BlockItem(JUNIPER_FENCE, new Item.Settings().group(ModItemGroup.ACACIA)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "juniper_fence_gate"), new BlockItem(JUNIPER_FENCE_GATE, new Item.Settings().group(ModItemGroup.ACACIA)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "juniper_button"), new BlockItem(JUNIPER_BUTTON, new Item.Settings().group(ModItemGroup.ACACIA)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "juniper_pressure_plate"), new BlockItem(JUNIPER_PRESSURE_PLATE, new Item.Settings().group(ModItemGroup.ACACIA)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "juniper_door"), new BlockItem(JUNIPER_DOOR, new Item.Settings().group(ModItemGroup.ACACIA)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "juniper_trapdoor"), new BlockItem(JUNIPER_TRAPDOOR, new Item.Settings().group(ModItemGroup.ACACIA)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "juniper_sign"), (Item)(new SignItem(new Item.Settings().maxCount(16).group(ModItemGroup.ACACIA), JUNIPER_SIGN, JUNIPER_WALL_SIGN)));

		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "larch_log"), LARCH_LOG);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "larch_wood"), LARCH_WOOD);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "stripped_larch_log"), STRIPPED_LARCH_LOG);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "stripped_larch_wood"), STRIPPED_LARCH_WOOD);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "larch_leaves"), LARCH_LEAVES);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "larch_sapling"), LARCH_SAPLING);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "potted_larch_sapling"), POTTED_LARCH_SAPLING);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "larch_planks"), LARCH_PLANKS);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "larch_slab"), LARCH_SLAB);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "larch_stairs"), LARCH_STAIRS);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "larch_fence"), LARCH_FENCE);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "larch_fence_gate"), LARCH_FENCE_GATE);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "larch_button"), LARCH_BUTTON);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "larch_pressure_plate"), LARCH_PRESSURE_PLATE);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "larch_door"), LARCH_DOOR);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "larch_trapdoor"), LARCH_TRAPDOOR);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "larch_sign"), LARCH_SIGN);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "larch_wall_sign"), LARCH_WALL_SIGN);
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "larch_log"), new BlockItem(LARCH_LOG, new Item.Settings().group(ModItemGroup.SPRUCE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "larch_wood"), new BlockItem(LARCH_WOOD, new Item.Settings().group(ModItemGroup.SPRUCE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "stripped_larch_log"), new BlockItem(STRIPPED_LARCH_LOG, new Item.Settings().group(ModItemGroup.SPRUCE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "stripped_larch_wood"), new BlockItem(STRIPPED_LARCH_WOOD, new Item.Settings().group(ModItemGroup.SPRUCE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "larch_leaves"), new BlockItem(LARCH_LEAVES, new Item.Settings().group(ModItemGroup.SPRUCE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "larch_sapling"), new BlockItem(LARCH_SAPLING, new Item.Settings().group(ModItemGroup.SPRUCE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "larch_planks"), new BlockItem(LARCH_PLANKS, new Item.Settings().group(ModItemGroup.SPRUCE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "larch_slab"), new BlockItem(LARCH_SLAB, new Item.Settings().group(ModItemGroup.SPRUCE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "larch_stairs"), new BlockItem(LARCH_STAIRS, new Item.Settings().group(ModItemGroup.SPRUCE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "larch_fence"), new BlockItem(LARCH_FENCE, new Item.Settings().group(ModItemGroup.SPRUCE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "larch_fence_gate"), new BlockItem(LARCH_FENCE_GATE, new Item.Settings().group(ModItemGroup.SPRUCE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "larch_button"), new BlockItem(LARCH_BUTTON, new Item.Settings().group(ModItemGroup.SPRUCE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "larch_pressure_plate"), new BlockItem(LARCH_PRESSURE_PLATE, new Item.Settings().group(ModItemGroup.SPRUCE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "larch_door"), new BlockItem(LARCH_DOOR, new Item.Settings().group(ModItemGroup.SPRUCE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "larch_trapdoor"), new BlockItem(LARCH_TRAPDOOR, new Item.Settings().group(ModItemGroup.SPRUCE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "larch_sign"), (Item)(new SignItem(new Item.Settings().maxCount(16).group(ModItemGroup.SPRUCE), LARCH_SIGN, LARCH_WALL_SIGN)));

		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "mahogany_log"), MAHOGANY_LOG);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "mahogany_wood"), MAHOGANY_WOOD);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "stripped_mahogany_log"), STRIPPED_MAHOGANY_LOG);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "stripped_mahogany_wood"), STRIPPED_MAHOGANY_WOOD);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "mahogany_leaves"), MAHOGANY_LEAVES);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "mahogany_sapling"), MAHOGANY_SAPLING);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "potted_mahogany_sapling"), POTTED_MAHOGANY_SAPLING);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "mahogany_planks"), MAHOGANY_PLANKS);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "mahogany_slab"), MAHOGANY_SLAB);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "mahogany_stairs"), MAHOGANY_STAIRS);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "mahogany_fence"), MAHOGANY_FENCE);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "mahogany_fence_gate"), MAHOGANY_FENCE_GATE);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "mahogany_button"), MAHOGANY_BUTTON);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "mahogany_pressure_plate"), MAHOGANY_PRESSURE_PLATE);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "mahogany_door"), MAHOGANY_DOOR);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "mahogany_trapdoor"), MAHOGANY_TRAPDOOR);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "mahogany_sign"), MAHOGANY_SIGN);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "mahogany_wall_sign"), MAHOGANY_WALL_SIGN);
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "mahogany_log"), new BlockItem(MAHOGANY_LOG, new Item.Settings().group(ModItemGroup.JUNGLE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "mahogany_wood"), new BlockItem(MAHOGANY_WOOD, new Item.Settings().group(ModItemGroup.JUNGLE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "stripped_mahogany_log"), new BlockItem(STRIPPED_MAHOGANY_LOG, new Item.Settings().group(ModItemGroup.JUNGLE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "stripped_mahogany_wood"), new BlockItem(STRIPPED_MAHOGANY_WOOD, new Item.Settings().group(ModItemGroup.JUNGLE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "mahogany_leaves"), new BlockItem(MAHOGANY_LEAVES, new Item.Settings().group(ModItemGroup.JUNGLE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "mahogany_sapling"), new BlockItem(MAHOGANY_SAPLING, new Item.Settings().group(ModItemGroup.JUNGLE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "mahogany_planks"), new BlockItem(MAHOGANY_PLANKS, new Item.Settings().group(ModItemGroup.JUNGLE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "mahogany_slab"), new BlockItem(MAHOGANY_SLAB, new Item.Settings().group(ModItemGroup.JUNGLE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "mahogany_stairs"), new BlockItem(MAHOGANY_STAIRS, new Item.Settings().group(ModItemGroup.JUNGLE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "mahogany_fence"), new BlockItem(MAHOGANY_FENCE, new Item.Settings().group(ModItemGroup.JUNGLE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "mahogany_fence_gate"), new BlockItem(MAHOGANY_FENCE_GATE, new Item.Settings().group(ModItemGroup.JUNGLE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "mahogany_button"), new BlockItem(MAHOGANY_BUTTON, new Item.Settings().group(ModItemGroup.JUNGLE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "mahogany_pressure_plate"), new BlockItem(MAHOGANY_PRESSURE_PLATE, new Item.Settings().group(ModItemGroup.JUNGLE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "mahogany_door"), new BlockItem(MAHOGANY_DOOR, new Item.Settings().group(ModItemGroup.JUNGLE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "mahogany_trapdoor"), new BlockItem(MAHOGANY_TRAPDOOR, new Item.Settings().group(ModItemGroup.JUNGLE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "mahogany_sign"), (Item)(new SignItem(new Item.Settings().maxCount(16).group(ModItemGroup.JUNGLE), MAHOGANY_SIGN, MAHOGANY_WALL_SIGN)));

		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "maple_log"), MAPLE_LOG);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "maple_wood"), MAPLE_WOOD);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "stripped_maple_log"), STRIPPED_MAPLE_LOG);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "stripped_maple_wood"), STRIPPED_MAPLE_WOOD);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "maple_leaves"), MAPLE_LEAVES);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "maple_sapling"), MAPLE_SAPLING);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "potted_maple_sapling"), POTTED_MAPLE_SAPLING);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "maple_planks"), MAPLE_PLANKS);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "maple_slab"), MAPLE_SLAB);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "maple_stairs"), MAPLE_STAIRS);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "maple_fence"), MAPLE_FENCE);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "maple_fence_gate"), MAPLE_FENCE_GATE);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "maple_button"), MAPLE_BUTTON);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "maple_pressure_plate"), MAPLE_PRESSURE_PLATE);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "maple_door"), MAPLE_DOOR);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "maple_trapdoor"), MAPLE_TRAPDOOR);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "maple_sign"), MAPLE_SIGN);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "maple_wall_sign"), MAPLE_WALL_SIGN);
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "maple_log"), new BlockItem(MAPLE_LOG, new Item.Settings().group(ModItemGroup.OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "maple_wood"), new BlockItem(MAPLE_WOOD, new Item.Settings().group(ModItemGroup.OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "stripped_maple_log"), new BlockItem(STRIPPED_MAPLE_LOG, new Item.Settings().group(ModItemGroup.OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "stripped_maple_wood"), new BlockItem(STRIPPED_MAPLE_WOOD, new Item.Settings().group(ModItemGroup.OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "maple_leaves"), new BlockItem(MAPLE_LEAVES, new Item.Settings().group(ModItemGroup.OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "maple_sapling"), new BlockItem(MAPLE_SAPLING, new Item.Settings().group(ModItemGroup.OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "maple_planks"), new BlockItem(MAPLE_PLANKS, new Item.Settings().group(ModItemGroup.OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "maple_slab"), new BlockItem(MAPLE_SLAB, new Item.Settings().group(ModItemGroup.OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "maple_stairs"), new BlockItem(MAPLE_STAIRS, new Item.Settings().group(ModItemGroup.OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "maple_fence"), new BlockItem(MAPLE_FENCE, new Item.Settings().group(ModItemGroup.OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "maple_fence_gate"), new BlockItem(MAPLE_FENCE_GATE, new Item.Settings().group(ModItemGroup.OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "maple_button"), new BlockItem(MAPLE_BUTTON, new Item.Settings().group(ModItemGroup.OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "maple_pressure_plate"), new BlockItem(MAPLE_PRESSURE_PLATE, new Item.Settings().group(ModItemGroup.OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "maple_door"), new BlockItem(MAPLE_DOOR, new Item.Settings().group(ModItemGroup.OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "maple_trapdoor"), new BlockItem(MAPLE_TRAPDOOR, new Item.Settings().group(ModItemGroup.OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "maple_sign"), (Item)(new SignItem(new Item.Settings().maxCount(16).group(ModItemGroup.OAK), MAPLE_SIGN, MAPLE_WALL_SIGN)));

		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "mesquite_log"), MESQUITE_LOG);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "mesquite_wood"), MESQUITE_WOOD);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "stripped_mesquite_log"), STRIPPED_MESQUITE_LOG);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "stripped_mesquite_wood"), STRIPPED_MESQUITE_WOOD);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "mesquite_leaves"), MESQUITE_LEAVES);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "mesquite_sapling"), MESQUITE_SAPLING);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "potted_mesquite_sapling"), POTTED_MESQUITE_SAPLING);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "mesquite_planks"), MESQUITE_PLANKS);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "mesquite_slab"), MESQUITE_SLAB);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "mesquite_stairs"), MESQUITE_STAIRS);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "mesquite_fence"), MESQUITE_FENCE);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "mesquite_fence_gate"), MESQUITE_FENCE_GATE);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "mesquite_button"), MESQUITE_BUTTON);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "mesquite_pressure_plate"), MESQUITE_PRESSURE_PLATE);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "mesquite_door"), MESQUITE_DOOR);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "mesquite_trapdoor"), MESQUITE_TRAPDOOR);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "mesquite_sign"), MESQUITE_SIGN);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "mesquite_wall_sign"), MESQUITE_WALL_SIGN);
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "mesquite_log"), new BlockItem(MESQUITE_LOG, new Item.Settings().group(ModItemGroup.ACACIA)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "mesquite_wood"), new BlockItem(MESQUITE_WOOD, new Item.Settings().group(ModItemGroup.ACACIA)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "stripped_mesquite_log"), new BlockItem(STRIPPED_MESQUITE_LOG, new Item.Settings().group(ModItemGroup.ACACIA)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "stripped_mesquite_wood"), new BlockItem(STRIPPED_MESQUITE_WOOD, new Item.Settings().group(ModItemGroup.ACACIA)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "mesquite_leaves"), new BlockItem(MESQUITE_LEAVES, new Item.Settings().group(ModItemGroup.ACACIA)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "mesquite_sapling"), new BlockItem(MESQUITE_SAPLING, new Item.Settings().group(ModItemGroup.ACACIA)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "mesquite_planks"), new BlockItem(MESQUITE_PLANKS, new Item.Settings().group(ModItemGroup.ACACIA)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "mesquite_slab"), new BlockItem(MESQUITE_SLAB, new Item.Settings().group(ModItemGroup.ACACIA)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "mesquite_stairs"), new BlockItem(MESQUITE_STAIRS, new Item.Settings().group(ModItemGroup.ACACIA)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "mesquite_fence"), new BlockItem(MESQUITE_FENCE, new Item.Settings().group(ModItemGroup.ACACIA)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "mesquite_fence_gate"), new BlockItem(MESQUITE_FENCE_GATE, new Item.Settings().group(ModItemGroup.ACACIA)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "mesquite_button"), new BlockItem(MESQUITE_BUTTON, new Item.Settings().group(ModItemGroup.ACACIA)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "mesquite_pressure_plate"), new BlockItem(MESQUITE_PRESSURE_PLATE, new Item.Settings().group(ModItemGroup.ACACIA)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "mesquite_door"), new BlockItem(MESQUITE_DOOR, new Item.Settings().group(ModItemGroup.ACACIA)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "mesquite_trapdoor"), new BlockItem(MESQUITE_TRAPDOOR, new Item.Settings().group(ModItemGroup.ACACIA)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "mesquite_sign"), (Item)(new SignItem(new Item.Settings().maxCount(16).group(ModItemGroup.ACACIA), MESQUITE_SIGN, MESQUITE_WALL_SIGN)));

		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "peach_log"), PEACH_LOG);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "peach_wood"), PEACH_WOOD);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "stripped_peach_log"), STRIPPED_PEACH_LOG);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "stripped_peach_wood"), STRIPPED_PEACH_WOOD);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "peach_leaves"), PEACH_LEAVES);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "peach_sapling"), PEACH_SAPLING);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "potted_peach_sapling"), POTTED_PEACH_SAPLING);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "peach_planks"), PEACH_PLANKS);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "peach_slab"), PEACH_SLAB);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "peach_stairs"), PEACH_STAIRS);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "peach_fence"), PEACH_FENCE);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "peach_fence_gate"), PEACH_FENCE_GATE);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "peach_button"), PEACH_BUTTON);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "peach_pressure_plate"), PEACH_PRESSURE_PLATE);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "peach_door"), PEACH_DOOR);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "peach_trapdoor"), PEACH_TRAPDOOR);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "peach_sign"), PEACH_SIGN);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "peach_wall_sign"), PEACH_WALL_SIGN);
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "peach_log"), new BlockItem(PEACH_LOG, new Item.Settings().group(ModItemGroup.DARK_OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "peach_wood"), new BlockItem(PEACH_WOOD, new Item.Settings().group(ModItemGroup.DARK_OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "stripped_peach_log"), new BlockItem(STRIPPED_PEACH_LOG, new Item.Settings().group(ModItemGroup.DARK_OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "stripped_peach_wood"), new BlockItem(STRIPPED_PEACH_WOOD, new Item.Settings().group(ModItemGroup.DARK_OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "peach_leaves"), new BlockItem(PEACH_LEAVES, new Item.Settings().group(ModItemGroup.DARK_OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "peach_sapling"), new BlockItem(PEACH_SAPLING, new Item.Settings().group(ModItemGroup.DARK_OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "peach_planks"), new BlockItem(PEACH_PLANKS, new Item.Settings().group(ModItemGroup.DARK_OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "peach_slab"), new BlockItem(PEACH_SLAB, new Item.Settings().group(ModItemGroup.DARK_OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "peach_stairs"), new BlockItem(PEACH_STAIRS, new Item.Settings().group(ModItemGroup.DARK_OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "peach_fence"), new BlockItem(PEACH_FENCE, new Item.Settings().group(ModItemGroup.DARK_OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "peach_fence_gate"), new BlockItem(PEACH_FENCE_GATE, new Item.Settings().group(ModItemGroup.DARK_OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "peach_button"), new BlockItem(PEACH_BUTTON, new Item.Settings().group(ModItemGroup.DARK_OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "peach_pressure_plate"), new BlockItem(PEACH_PRESSURE_PLATE, new Item.Settings().group(ModItemGroup.DARK_OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "peach_door"), new BlockItem(PEACH_DOOR, new Item.Settings().group(ModItemGroup.DARK_OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "peach_trapdoor"), new BlockItem(PEACH_TRAPDOOR, new Item.Settings().group(ModItemGroup.DARK_OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "peach_sign"), (Item)(new SignItem(new Item.Settings().maxCount(16).group(ModItemGroup.DARK_OAK), PEACH_SIGN, PEACH_WALL_SIGN)));

		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "pear_log"), PEAR_LOG);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "pear_wood"), PEAR_WOOD);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "stripped_pear_log"), STRIPPED_PEAR_LOG);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "stripped_pear_wood"), STRIPPED_PEAR_WOOD);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "pear_leaves"), PEAR_LEAVES);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "pear_sapling"), PEAR_SAPLING);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "potted_pear_sapling"), POTTED_PEAR_SAPLING);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "pear_planks"), PEAR_PLANKS);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "pear_slab"), PEAR_SLAB);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "pear_stairs"), PEAR_STAIRS);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "pear_fence"), PEAR_FENCE);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "pear_fence_gate"), PEAR_FENCE_GATE);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "pear_button"), PEAR_BUTTON);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "pear_pressure_plate"), PEAR_PRESSURE_PLATE);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "pear_door"), PEAR_DOOR);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "pear_trapdoor"), PEAR_TRAPDOOR);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "pear_sign"), PEAR_SIGN);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "pear_wall_sign"), PEAR_WALL_SIGN);
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "pear_log"), new BlockItem(PEAR_LOG, new Item.Settings().group(ModItemGroup.DARK_OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "pear_wood"), new BlockItem(PEAR_WOOD, new Item.Settings().group(ModItemGroup.DARK_OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "stripped_pear_log"), new BlockItem(STRIPPED_PEAR_LOG, new Item.Settings().group(ModItemGroup.DARK_OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "stripped_pear_wood"), new BlockItem(STRIPPED_PEAR_WOOD, new Item.Settings().group(ModItemGroup.DARK_OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "pear_leaves"), new BlockItem(PEAR_LEAVES, new Item.Settings().group(ModItemGroup.DARK_OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "pear_sapling"), new BlockItem(PEAR_SAPLING, new Item.Settings().group(ModItemGroup.DARK_OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "pear_planks"), new BlockItem(PEAR_PLANKS, new Item.Settings().group(ModItemGroup.DARK_OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "pear_slab"), new BlockItem(PEAR_SLAB, new Item.Settings().group(ModItemGroup.DARK_OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "pear_stairs"), new BlockItem(PEAR_STAIRS, new Item.Settings().group(ModItemGroup.DARK_OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "pear_fence"), new BlockItem(PEAR_FENCE, new Item.Settings().group(ModItemGroup.DARK_OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "pear_fence_gate"), new BlockItem(PEAR_FENCE_GATE, new Item.Settings().group(ModItemGroup.DARK_OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "pear_button"), new BlockItem(PEAR_BUTTON, new Item.Settings().group(ModItemGroup.DARK_OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "pear_pressure_plate"), new BlockItem(PEAR_PRESSURE_PLATE, new Item.Settings().group(ModItemGroup.DARK_OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "pear_door"), new BlockItem(PEAR_DOOR, new Item.Settings().group(ModItemGroup.DARK_OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "pear_trapdoor"), new BlockItem(PEAR_TRAPDOOR, new Item.Settings().group(ModItemGroup.DARK_OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "pear_sign"), (Item)(new SignItem(new Item.Settings().maxCount(16).group(ModItemGroup.DARK_OAK), PEAR_SIGN, PEAR_WALL_SIGN)));

		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "pine_log"), PINE_LOG);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "pine_wood"), PINE_WOOD);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "stripped_pine_log"), STRIPPED_PINE_LOG);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "stripped_pine_wood"), STRIPPED_PINE_WOOD);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "pine_leaves"), PINE_LEAVES);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "pine_sapling"), PINE_SAPLING);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "potted_pine_sapling"), POTTED_PINE_SAPLING);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "pine_planks"), PINE_PLANKS);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "pine_slab"), PINE_SLAB);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "pine_stairs"), PINE_STAIRS);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "pine_fence"), PINE_FENCE);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "pine_fence_gate"), PINE_FENCE_GATE);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "pine_button"), PINE_BUTTON);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "pine_pressure_plate"), PINE_PRESSURE_PLATE);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "pine_door"), PINE_DOOR);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "pine_trapdoor"), PINE_TRAPDOOR);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "pine_sign"), PINE_SIGN);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "pine_wall_sign"), PINE_WALL_SIGN);
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "pine_log"), new BlockItem(PINE_LOG, new Item.Settings().group(ModItemGroup.BIRCH)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "pine_wood"), new BlockItem(PINE_WOOD, new Item.Settings().group(ModItemGroup.BIRCH)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "stripped_pine_log"), new BlockItem(STRIPPED_PINE_LOG, new Item.Settings().group(ModItemGroup.BIRCH)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "stripped_pine_wood"), new BlockItem(STRIPPED_PINE_WOOD, new Item.Settings().group(ModItemGroup.BIRCH)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "pine_leaves"), new BlockItem(PINE_LEAVES, new Item.Settings().group(ModItemGroup.BIRCH)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "pine_sapling"), new BlockItem(PINE_SAPLING, new Item.Settings().group(ModItemGroup.BIRCH)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "pine_planks"), new BlockItem(PINE_PLANKS, new Item.Settings().group(ModItemGroup.BIRCH)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "pine_slab"), new BlockItem(PINE_SLAB, new Item.Settings().group(ModItemGroup.BIRCH)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "pine_stairs"), new BlockItem(PINE_STAIRS, new Item.Settings().group(ModItemGroup.BIRCH)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "pine_fence"), new BlockItem(PINE_FENCE, new Item.Settings().group(ModItemGroup.BIRCH)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "pine_fence_gate"), new BlockItem(PINE_FENCE_GATE, new Item.Settings().group(ModItemGroup.BIRCH)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "pine_button"), new BlockItem(PINE_BUTTON, new Item.Settings().group(ModItemGroup.BIRCH)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "pine_pressure_plate"), new BlockItem(PINE_PRESSURE_PLATE, new Item.Settings().group(ModItemGroup.BIRCH)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "pine_door"), new BlockItem(PINE_DOOR, new Item.Settings().group(ModItemGroup.BIRCH)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "pine_trapdoor"), new BlockItem(PINE_TRAPDOOR, new Item.Settings().group(ModItemGroup.BIRCH)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "pine_sign"), (Item)(new SignItem(new Item.Settings().maxCount(16).group(ModItemGroup.BIRCH), PINE_SIGN, PINE_WALL_SIGN)));

		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "redwood_log"), REDWOOD_LOG);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "redwood_wood"), REDWOOD_WOOD);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "stripped_redwood_log"), STRIPPED_REDWOOD_LOG);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "stripped_redwood_wood"), STRIPPED_REDWOOD_WOOD);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "redwood_leaves"), REDWOOD_LEAVES);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "redwood_sapling"), REDWOOD_SAPLING);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "potted_redwood_sapling"), POTTED_REDWOOD_SAPLING);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "redwood_planks"), REDWOOD_PLANKS);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "redwood_slab"), REDWOOD_SLAB);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "redwood_stairs"), REDWOOD_STAIRS);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "redwood_fence"), REDWOOD_FENCE);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "redwood_fence_gate"), REDWOOD_FENCE_GATE);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "redwood_button"), REDWOOD_BUTTON);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "redwood_pressure_plate"), REDWOOD_PRESSURE_PLATE);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "redwood_door"), REDWOOD_DOOR);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "redwood_trapdoor"), REDWOOD_TRAPDOOR);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "redwood_sign"), REDWOOD_SIGN);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "redwood_wall_sign"), REDWOOD_WALL_SIGN);
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "redwood_log"), new BlockItem(REDWOOD_LOG, new Item.Settings().group(ModItemGroup.SPRUCE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "redwood_wood"), new BlockItem(REDWOOD_WOOD, new Item.Settings().group(ModItemGroup.SPRUCE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "stripped_redwood_log"), new BlockItem(STRIPPED_REDWOOD_LOG, new Item.Settings().group(ModItemGroup.SPRUCE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "stripped_redwood_wood"), new BlockItem(STRIPPED_REDWOOD_WOOD, new Item.Settings().group(ModItemGroup.SPRUCE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "redwood_leaves"), new BlockItem(REDWOOD_LEAVES, new Item.Settings().group(ModItemGroup.SPRUCE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "redwood_sapling"), new BlockItem(REDWOOD_SAPLING, new Item.Settings().group(ModItemGroup.SPRUCE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "redwood_planks"), new BlockItem(REDWOOD_PLANKS, new Item.Settings().group(ModItemGroup.SPRUCE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "redwood_slab"), new BlockItem(REDWOOD_SLAB, new Item.Settings().group(ModItemGroup.SPRUCE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "redwood_stairs"), new BlockItem(REDWOOD_STAIRS, new Item.Settings().group(ModItemGroup.SPRUCE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "redwood_fence"), new BlockItem(REDWOOD_FENCE, new Item.Settings().group(ModItemGroup.SPRUCE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "redwood_fence_gate"), new BlockItem(REDWOOD_FENCE_GATE, new Item.Settings().group(ModItemGroup.SPRUCE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "redwood_button"), new BlockItem(REDWOOD_BUTTON, new Item.Settings().group(ModItemGroup.SPRUCE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "redwood_pressure_plate"), new BlockItem(REDWOOD_PRESSURE_PLATE, new Item.Settings().group(ModItemGroup.SPRUCE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "redwood_door"), new BlockItem(REDWOOD_DOOR, new Item.Settings().group(ModItemGroup.SPRUCE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "redwood_trapdoor"), new BlockItem(REDWOOD_TRAPDOOR, new Item.Settings().group(ModItemGroup.SPRUCE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "redwood_sign"), (Item)(new SignItem(new Item.Settings().maxCount(16).group(ModItemGroup.SPRUCE), REDWOOD_SIGN, REDWOOD_WALL_SIGN)));

		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "rosewood_log"), ROSEWOOD_LOG);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "rosewood_wood"), ROSEWOOD_WOOD);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "stripped_rosewood_log"), STRIPPED_ROSEWOOD_LOG);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "stripped_rosewood_wood"), STRIPPED_ROSEWOOD_WOOD);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "rosewood_leaves"), ROSEWOOD_LEAVES);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "rosewood_sapling"), ROSEWOOD_SAPLING);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "potted_rosewood_sapling"), POTTED_ROSEWOOD_SAPLING);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "rosewood_planks"), ROSEWOOD_PLANKS);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "rosewood_slab"), ROSEWOOD_SLAB);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "rosewood_stairs"), ROSEWOOD_STAIRS);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "rosewood_fence"), ROSEWOOD_FENCE);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "rosewood_fence_gate"), ROSEWOOD_FENCE_GATE);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "rosewood_button"), ROSEWOOD_BUTTON);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "rosewood_pressure_plate"), ROSEWOOD_PRESSURE_PLATE);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "rosewood_door"), ROSEWOOD_DOOR);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "rosewood_trapdoor"), ROSEWOOD_TRAPDOOR);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "rosewood_sign"), ROSEWOOD_SIGN);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "rosewood_wall_sign"), ROSEWOOD_WALL_SIGN);
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "rosewood_log"), new BlockItem(ROSEWOOD_LOG, new Item.Settings().group(ModItemGroup.JUNGLE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "rosewood_wood"), new BlockItem(ROSEWOOD_WOOD, new Item.Settings().group(ModItemGroup.JUNGLE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "stripped_rosewood_log"), new BlockItem(STRIPPED_ROSEWOOD_LOG, new Item.Settings().group(ModItemGroup.JUNGLE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "stripped_rosewood_wood"), new BlockItem(STRIPPED_ROSEWOOD_WOOD, new Item.Settings().group(ModItemGroup.JUNGLE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "rosewood_leaves"), new BlockItem(ROSEWOOD_LEAVES, new Item.Settings().group(ModItemGroup.JUNGLE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "rosewood_sapling"), new BlockItem(ROSEWOOD_SAPLING, new Item.Settings().group(ModItemGroup.JUNGLE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "rosewood_planks"), new BlockItem(ROSEWOOD_PLANKS, new Item.Settings().group(ModItemGroup.JUNGLE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "rosewood_slab"), new BlockItem(ROSEWOOD_SLAB, new Item.Settings().group(ModItemGroup.JUNGLE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "rosewood_stairs"), new BlockItem(ROSEWOOD_STAIRS, new Item.Settings().group(ModItemGroup.JUNGLE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "rosewood_fence"), new BlockItem(ROSEWOOD_FENCE, new Item.Settings().group(ModItemGroup.JUNGLE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "rosewood_fence_gate"), new BlockItem(ROSEWOOD_FENCE_GATE, new Item.Settings().group(ModItemGroup.JUNGLE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "rosewood_button"), new BlockItem(ROSEWOOD_BUTTON, new Item.Settings().group(ModItemGroup.JUNGLE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "rosewood_pressure_plate"), new BlockItem(ROSEWOOD_PRESSURE_PLATE, new Item.Settings().group(ModItemGroup.JUNGLE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "rosewood_door"), new BlockItem(ROSEWOOD_DOOR, new Item.Settings().group(ModItemGroup.JUNGLE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "rosewood_trapdoor"), new BlockItem(ROSEWOOD_TRAPDOOR, new Item.Settings().group(ModItemGroup.JUNGLE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "rosewood_sign"), (Item)(new SignItem(new Item.Settings().maxCount(16).group(ModItemGroup.JUNGLE), ROSEWOOD_SIGN, ROSEWOOD_WALL_SIGN)));

		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "teak_log"), TEAK_LOG);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "teak_wood"), TEAK_WOOD);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "stripped_teak_log"), STRIPPED_TEAK_LOG);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "stripped_teak_wood"), STRIPPED_TEAK_WOOD);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "teak_leaves"), TEAK_LEAVES);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "teak_sapling"), TEAK_SAPLING);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "potted_teak_sapling"), POTTED_TEAK_SAPLING);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "teak_planks"), TEAK_PLANKS);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "teak_slab"), TEAK_SLAB);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "teak_stairs"), TEAK_STAIRS);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "teak_fence"), TEAK_FENCE);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "teak_fence_gate"), TEAK_FENCE_GATE);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "teak_button"), TEAK_BUTTON);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "teak_pressure_plate"), TEAK_PRESSURE_PLATE);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "teak_door"), TEAK_DOOR);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "teak_trapdoor"), TEAK_TRAPDOOR);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "teak_sign"), TEAK_SIGN);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "teak_wall_sign"), TEAK_WALL_SIGN);
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "teak_log"), new BlockItem(TEAK_LOG, new Item.Settings().group(ModItemGroup.JUNGLE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "teak_wood"), new BlockItem(TEAK_WOOD, new Item.Settings().group(ModItemGroup.JUNGLE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "stripped_teak_log"), new BlockItem(STRIPPED_TEAK_LOG, new Item.Settings().group(ModItemGroup.JUNGLE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "stripped_teak_wood"), new BlockItem(STRIPPED_TEAK_WOOD, new Item.Settings().group(ModItemGroup.JUNGLE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "teak_leaves"), new BlockItem(TEAK_LEAVES, new Item.Settings().group(ModItemGroup.JUNGLE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "teak_sapling"), new BlockItem(TEAK_SAPLING, new Item.Settings().group(ModItemGroup.JUNGLE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "teak_planks"), new BlockItem(TEAK_PLANKS, new Item.Settings().group(ModItemGroup.JUNGLE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "teak_slab"), new BlockItem(TEAK_SLAB, new Item.Settings().group(ModItemGroup.JUNGLE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "teak_stairs"), new BlockItem(TEAK_STAIRS, new Item.Settings().group(ModItemGroup.JUNGLE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "teak_fence"), new BlockItem(TEAK_FENCE, new Item.Settings().group(ModItemGroup.JUNGLE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "teak_fence_gate"), new BlockItem(TEAK_FENCE_GATE, new Item.Settings().group(ModItemGroup.JUNGLE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "teak_button"), new BlockItem(TEAK_BUTTON, new Item.Settings().group(ModItemGroup.JUNGLE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "teak_pressure_plate"), new BlockItem(TEAK_PRESSURE_PLATE, new Item.Settings().group(ModItemGroup.JUNGLE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "teak_door"), new BlockItem(TEAK_DOOR, new Item.Settings().group(ModItemGroup.JUNGLE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "teak_trapdoor"), new BlockItem(TEAK_TRAPDOOR, new Item.Settings().group(ModItemGroup.JUNGLE)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "teak_sign"), (Item)(new SignItem(new Item.Settings().maxCount(16).group(ModItemGroup.JUNGLE), TEAK_SIGN, TEAK_WALL_SIGN)));

		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "walnut_log"), WALNUT_LOG);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "walnut_wood"), WALNUT_WOOD);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "stripped_walnut_log"), STRIPPED_WALNUT_LOG);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "stripped_walnut_wood"), STRIPPED_WALNUT_WOOD);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "walnut_leaves"), WALNUT_LEAVES);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "walnut_sapling"), WALNUT_SAPLING);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "potted_walnut_sapling"), POTTED_WALNUT_SAPLING);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "walnut_planks"), WALNUT_PLANKS);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "walnut_slab"), WALNUT_SLAB);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "walnut_stairs"), WALNUT_STAIRS);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "walnut_fence"), WALNUT_FENCE);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "walnut_fence_gate"), WALNUT_FENCE_GATE);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "walnut_button"), WALNUT_BUTTON);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "walnut_pressure_plate"), WALNUT_PRESSURE_PLATE);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "walnut_door"), WALNUT_DOOR);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "walnut_trapdoor"), WALNUT_TRAPDOOR);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "walnut_sign"), WALNUT_SIGN);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "walnut_wall_sign"), WALNUT_WALL_SIGN);
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "walnut_log"), new BlockItem(WALNUT_LOG, new Item.Settings().group(ModItemGroup.OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "walnut_wood"), new BlockItem(WALNUT_WOOD, new Item.Settings().group(ModItemGroup.OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "stripped_walnut_log"), new BlockItem(STRIPPED_WALNUT_LOG, new Item.Settings().group(ModItemGroup.OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "stripped_walnut_wood"), new BlockItem(STRIPPED_WALNUT_WOOD, new Item.Settings().group(ModItemGroup.OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "walnut_leaves"), new BlockItem(WALNUT_LEAVES, new Item.Settings().group(ModItemGroup.OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "walnut_sapling"), new BlockItem(WALNUT_SAPLING, new Item.Settings().group(ModItemGroup.OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "walnut_planks"), new BlockItem(WALNUT_PLANKS, new Item.Settings().group(ModItemGroup.OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "walnut_slab"), new BlockItem(WALNUT_SLAB, new Item.Settings().group(ModItemGroup.OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "walnut_stairs"), new BlockItem(WALNUT_STAIRS, new Item.Settings().group(ModItemGroup.OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "walnut_fence"), new BlockItem(WALNUT_FENCE, new Item.Settings().group(ModItemGroup.OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "walnut_fence_gate"), new BlockItem(WALNUT_FENCE_GATE, new Item.Settings().group(ModItemGroup.OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "walnut_button"), new BlockItem(WALNUT_BUTTON, new Item.Settings().group(ModItemGroup.OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "walnut_pressure_plate"), new BlockItem(WALNUT_PRESSURE_PLATE, new Item.Settings().group(ModItemGroup.OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "walnut_door"), new BlockItem(WALNUT_DOOR, new Item.Settings().group(ModItemGroup.OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "walnut_trapdoor"), new BlockItem(WALNUT_TRAPDOOR, new Item.Settings().group(ModItemGroup.OAK)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "walnut_sign"), (Item)(new SignItem(new Item.Settings().maxCount(16).group(ModItemGroup.OAK), WALNUT_SIGN, WALNUT_WALL_SIGN)));

		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "willow_log"), WILLOW_LOG);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "willow_wood"), WILLOW_WOOD);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "stripped_willow_log"), STRIPPED_WILLOW_LOG);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "stripped_willow_wood"), STRIPPED_WILLOW_WOOD);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "willow_leaves"), WILLOW_LEAVES);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "willow_sapling"), WILLOW_SAPLING);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "potted_willow_sapling"), POTTED_WILLOW_SAPLING);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "willow_planks"), WILLOW_PLANKS);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "willow_slab"), WILLOW_SLAB);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "willow_stairs"), WILLOW_STAIRS);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "willow_fence"), WILLOW_FENCE);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "willow_fence_gate"), WILLOW_FENCE_GATE);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "willow_button"), WILLOW_BUTTON);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "willow_pressure_plate"), WILLOW_PRESSURE_PLATE);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "willow_door"), WILLOW_DOOR);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "willow_trapdoor"), WILLOW_TRAPDOOR);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "willow_sign"), WILLOW_SIGN);
		Registry.register(Registry.BLOCK, new Identifier(MOD_ID, "willow_wall_sign"), WILLOW_WALL_SIGN);
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "willow_log"), new BlockItem(WILLOW_LOG, new Item.Settings().group(ModItemGroup.ACACIA)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "willow_wood"), new BlockItem(WILLOW_WOOD, new Item.Settings().group(ModItemGroup.ACACIA)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "stripped_willow_log"), new BlockItem(STRIPPED_WILLOW_LOG, new Item.Settings().group(ModItemGroup.ACACIA)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "stripped_willow_wood"), new BlockItem(STRIPPED_WILLOW_WOOD, new Item.Settings().group(ModItemGroup.ACACIA)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "willow_leaves"), new BlockItem(WILLOW_LEAVES, new Item.Settings().group(ModItemGroup.ACACIA)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "willow_sapling"), new BlockItem(WILLOW_SAPLING, new Item.Settings().group(ModItemGroup.ACACIA)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "willow_planks"), new BlockItem(WILLOW_PLANKS, new Item.Settings().group(ModItemGroup.ACACIA)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "willow_slab"), new BlockItem(WILLOW_SLAB, new Item.Settings().group(ModItemGroup.ACACIA)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "willow_stairs"), new BlockItem(WILLOW_STAIRS, new Item.Settings().group(ModItemGroup.ACACIA)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "willow_fence"), new BlockItem(WILLOW_FENCE, new Item.Settings().group(ModItemGroup.ACACIA)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "willow_fence_gate"), new BlockItem(WILLOW_FENCE_GATE, new Item.Settings().group(ModItemGroup.ACACIA)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "willow_button"), new BlockItem(WILLOW_BUTTON, new Item.Settings().group(ModItemGroup.ACACIA)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "willow_pressure_plate"), new BlockItem(WILLOW_PRESSURE_PLATE, new Item.Settings().group(ModItemGroup.ACACIA)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "willow_door"), new BlockItem(WILLOW_DOOR, new Item.Settings().group(ModItemGroup.ACACIA)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "willow_trapdoor"), new BlockItem(WILLOW_TRAPDOOR, new Item.Settings().group(ModItemGroup.ACACIA)));
		Registry.register(Registry.ITEM, new Identifier(MOD_ID, "willow_sign"), (Item)(new SignItem(new Item.Settings().maxCount(16).group(ModItemGroup.ACACIA), WILLOW_SIGN, WILLOW_WALL_SIGN)));

		ModRegistry.registerBoats();
		ModRegistry.registerFuels();
		ModRegistry.registerStrippables();
		ModRegistry.registerFlammables();
		ModRegistry.registerCompostables();
		ModRegistry.registerRenderLayers();
		ModRegistry.registerColorProviders();

	}

}
